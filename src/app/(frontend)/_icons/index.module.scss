@use 'sass:math';


////////////////////////////
// MEDIA QUERIES (WIDTH)
/////////////////////////////

@mixin extra-small-break {
  @media (max-width: $breakpoint-xs-width) {
    @content;
  }
}

@mixin small-break {
  @media (max-width: $breakpoint-s-width) {
    @content;
  }
}

@mixin mid-break {
  @media (max-width: $breakpoint-m-width) {
    @content;
  }
}

@mixin mobile-header-break {
  @media (max-width: $breakpoint-mh-width) {
    @content;
  }
}

@mixin mid-plus-break {
  @media (max-width: $breakpoint-mp-width) {
    @content;
  }
}

@mixin large-mid-break {
  @media (max-width: $breakpoint-lm-width) {
    @content;
  }
}

@mixin large-break {
  @media (max-width: $breakpoint-l-width) {
    @content;
  }
}

@mixin extra-large-break {
  @media (max-width: $breakpoint-xl-width) {
    @content;
  }
}

@mixin two-extra-large-break {
  @media (max-width: $breakpoint-2xl-width) {
    @content;
  }
}

////////////////////////////
// MEDIA QUERIES (HEIGHT)
/////////////////////////////

@mixin large-break-ht {
  @media (max-height: $breakpoint-l-height) {
    @content;
  }
}



/////////////////////////////
// HEADINGS
/////////////////////////////

@mixin jumbo {
  margin: 50px 0;
  font-size: 132px;
  line-height: 1;
  font-weight: normal;

  @include extra-large-break {
    font-size: 96px;
  }

  @include large-break {
    font-size: 84px;
  }

  @include mid-break {
    font-size: 70px;
  }

  @include small-break {
    margin: 24px 0;
    font-size: 36px;
    line-height: 42px;
  }
}

@mixin h1 {
  margin: 3rem 0 2.4rem;
  font-size: 4rem;
  line-height: 1;
  font-weight: 500;
  letter-spacing: -0.05em;

  @include small-break {
    font-size: 2.5rem;
  }

  & code {
    font-size: inherit;
  }
}

@mixin h2 {
  margin: 2.4rem 0 1.8rem;
  font-size: 2.5rem;
  line-height: 1;
  font-weight: 500;
  letter-spacing: -0.05em;

  @include large-break {
    font-size: 3rem;
  }

  @include small-break {
    font-size: 1.75rem;
  }
  & code {
    font-size: inherit;
  }
}

@mixin h3 {
  margin: 1.8rem 0 1.2rem;
  font-size: 2rem;
  line-height: 1;
  font-weight: 500;
  letter-spacing: -0.05em;

  @include small-break {
    font-size: 1.5rem;
  }
  & code {
    font-size: inherit;
  }
}

@mixin h4 {
  margin: 1.2rem 0;
  font-size: 1.4rem;
  line-height: 1.2;
  font-weight: 500;
  letter-spacing: -0.05em;

  @include large-break {
    font-size: 1.5rem;
  }

  @include small-break {
    font-size: 1.125rem;
  }
  & code {
    font-size: inherit;
  }
}

@mixin h5 {
  margin: 1.2rem 0;
  font-size: 1rem;
  line-height: 1.2;
  font-weight: 500;
  letter-spacing: -0.05rem;

  @include large-break {
    font-size: 1.25rem;
  }

  @include small-break {
    font-size: 1rem;
  }
  & code {
    font-size: inherit;
  }
}

@mixin h6 {
  margin: 1.2rem 0;
  font-size: 13px;
  line-height: 1;
  font-weight: 400;
  letter-spacing: 0.25em;
  text-transform: uppercase;

  @include large-break {
    font-size: 12px;
  }
  & code {
    font-size: inherit;
  }
}

/////////////////////////////
// TYPE STYLES
/////////////////////////////

@mixin body {
  font-size: var(--font-body-size);
  line-height: 1.4;
}

@mixin small {
  & {
    letter-spacing: 0;
    font-size: 16px;
    line-height: 20px;

    @include extra-large-break {
      font-size: 15px;
      line-height: 18px;
    }
  }
}

@mixin large-body {
  font-size: 24px;
  line-height: 1.2em;
  letter-spacing: -0.04em;

  @include extra-large-break {
    font-size: 22px;
  }
}

@mixin code {
  font-family: var(--font-geist-mono);
  font-size: calc(var(--font-body-size) - 4px);
  letter-spacing: 0;

  @include extra-large-break {
    font-size: calc(var(--font-body-size) - 2px);
  }
}

@mixin label {
  display: inline-block;
  padding: 0.2rem 0.6rem;
  margin: 0;
  border-radius: 0.25rem;
  border: 1px solid var(--theme-success-200);
  background-color: var(--theme-success-50);
  color: var(--theme-success-650);
  line-height: 1.2;
  font-weight: 400;

  @include mid-break {
    font-size: 1rem;
  }

  @include small-break {
    font-size: 1rem;
  }
}

@mixin uppercaseLabel {
  color: var(--theme-elevation-900);
  font-size: 0.55rem;
  font-style: normal;
  font-weight: 400;
  line-height: 100%;
  letter-spacing: 2.75px;
  text-transform: uppercase;
  margin: 0 0 0.75rem 0;
}


//////////////////////////////
// BREAKPOINTS (WIDTH)
//////////////////////////////

$breakpoint-xs-width: 400px;
$breakpoint-s-width: 768px;
$breakpoint-m-width: 1024px;
$breakpoint-mh-width: 1170px;
$breakpoint-mp-width: 1200px;
$breakpoint-lm-width: 1400px;
$breakpoint-l-width: 1600px;
$breakpoint-xl-width: 1920px;
$breakpoint-2xl-width: 2250px;

//////////////////////////////
// BREAKPOINTS (HEIGHT)
//////////////////////////////

$breakpoint-l-height: 1000px;

//////////////////////////////
// SHADOWS
//////////////////////////////

@mixin shadow-sm {
  box-shadow:
    0 2px 3px 0 rgba(0, 2, 4, 0.05),
    0 10px 4px -8px rgba(0, 2, 4, 0.02);
}

@mixin shadow-m {
  box-shadow:
    0 0 30px 0 rgb(0 2 4 / 12%),
    0 30px 25px -8px rgb(0 2 4 / 10%);
}

@mixin shadow-lg {
  box-shadow:
    0 20px 35px -10px rgba(0, 2, 4, 0.2),
    0 6px 4px -4px rgba(0, 2, 4, 0.02);
}

@mixin shadow-lg-top {
  box-shadow:
    0 -2px 20px 7px rgba(0, 2, 4, 0.1),
    0 6px 4px -4px rgba(0, 2, 4, 0.02);
}

@mixin shadow {
  box-shadow: 0 12px 45px rgba(0, 0, 0, 0.03);

  &:hover {
    box-shadow: 0 12px 45px rgba(0, 0, 0, 0.07);
  }
}

@mixin inputShadowActive {
  box-shadow:
    0 2px 3px 0 rgba(0, 2, 4, 0.16),
    0 6px 4px -4px rgba(0, 2, 4, 0.13);
}

@mixin inputShadow {
  @include shadow-sm;

  &:not(:disabled) {
    &:hover {
      box-shadow:
        0 2px 3px 0 rgba(0, 2, 4, 0.13),
        0 6px 4px -4px rgba(0, 2, 4, 0.1);
    }

    &:active,
    &:focus {
      @include inputShadowActive;
    }
  }
}

@mixin soft-shadow-bottom {
  box-shadow: 0 7px 14px 0px rgb(0 0 0 / 5%);
}

//////////////////////////////
// STYLE MIXINS
//////////////////////////////

@mixin blur-bg($color: var(--theme-bg)) {
  &:before,
  &:after {
    content: ' ';
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
  }

  &:before {
    background: $color;
    opacity: 0.85;
  }

  &:after {
    backdrop-filter: blur(5px);
  }
}

@mixin formInput() {
  @include inputShadow;
  & {
    font-family: var(--font-body);
    width: 100%;
    border: 1px solid var(--theme-border-color);
    background: var(--theme-input-bg);
    color: var(--theme-elevation-800);
    border-radius: 0;
    font-size: 1rem;
    height: 2rem;
    line-height: 1rem;
    padding: 0.5rem 0.75rem;
    -webkit-appearance: none;
  }

  &::-webkit-input-placeholder {
    color: var(--theme-elevation-400);
    font-weight: normal;
    font-size: 1rem;
  }

  &::-moz-placeholder {
    color: var(--theme-elevation-400);
    font-weight: normal;
    font-size: 1rem;
  }

  &:hover {
    border-color: var(--theme-elevation-250);
  }

  &:focus,
  &:active {
    border-color: var(--theme-elevation-400);
    outline: 0;
  }

  &:disabled {
    background: var(--theme-elevation-100);
    color: var(--theme-elevation-450);

    &:hover {
      border-color: var(--theme-elevation-250);
    }
  }
}

@mixin btnReset {
  border: 0;
  background: none;
  box-shadow: none;
  border-radius: 0;
  padding: 0;
  color: currentColor;
  font-size: var(--font-body-size);
  font-family: var(--font-body);
}

@mixin mouseHover {
  @media (pointer: fine) {
    &:hover {
      @content;
    }
  }
}

@mixin outline {
  @media (pointer: fine) {
    outline: 1px solid var(--theme-blue-400);
    outline-offset: 2px;
  }
}

@mixin color-links {
  a {
    text-decoration: none;
    border-bottom: 1px dotted currentColor;
    color: var(--theme-blue-600);

    @include mouseHover {
      color: var(--theme-blue-400);
    }

    &:visited {
      color: var(--theme-purple-600);

      @include mouseHover {
        color: var(--theme-purple-500);
      }
    }
  }
}

@mixin dark-custom-scrollbar {
  &::-webkit-scrollbar {
    background-color: transparent;
    height: 8px;
    cursor: pointer;
  }

  &::-webkit-scrollbar-thumb {
    background-color: var(--color-base-800);
    border-radius: 0px;
    cursor: pointer;
  }

  &::-webkit-scrollbar-corner {
    background-color: transparent;
  }
}

@mixin underline-on-focus {
  & {
    text-decoration: none;
  }

  &:focus {
    text-decoration: underline;
  }
}

@mixin visually-hidden {
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

/**
  * A mixin to apply styles based on the current theme.
  *
  * @param {string} 'light' | 'dark' - The theme to apply the styles for.
  * @param {boolean} - Apply only the complex exclusive :not selector without the generic data-theme one.
  */
@mixin data-theme-selector($theme, $exclusive: false) {
  @if $exclusive == true {
    @if $theme == 'light' {
      [data-theme='light']:not(:has([data-theme='dark'])) & {
        @content;
      }
    } @else if $theme == 'dark' {
      [data-theme='dark']:not(:has([data-theme='light'])) & {
        @content;
      }
    }
  } @else {
    @if $theme == 'light' {
      [data-theme='light'] &,
      [data-theme='light']:not(:has([data-theme='dark'])) & {
        @content;
      }
    } @else if $theme == 'dark' {
      [data-theme='dark'] &,
      [data-theme='dark']:not(:has([data-theme='light'])) & {
        @content;
      }
    }
  }
}


.icon {
  width: 0.6rem;
  height: 0.6rem;
  overflow: visible;

  :global() {
    path {
      vector-effect: non-scaling-stroke;
    }
  }
}

.stroke {
  stroke-width: 1px;
  fill: none;
  stroke: currentColor;
}

.extra-small {
  width: 0.25rem;
  height: 0.25rem;
}

.small {
  width: 0.5rem;
  height: 0.5rem;
}

.medium {
  height: 0.75rem;
  width: 0.75rem;
}

.large {
  height: 1rem;
  width: 1rem;
}

.full {
  height: 100%;
  width: 100%;
}

.fill {
  fill: currentColor;
}

.bold {
  &:local() {
    .stroke {
      stroke-width: 2px;
    }
  }
}

.chevronDown {
  height: 0.5rem;
  width: 1rem;
}

.spinning {
  animation: spin 1s steps(8, end) infinite;
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
