@use "../../_styles/mixins" as *;
@use "../../_styles/typography" as *;
@use "../../_styles/colors" as *;
@use "../../_styles/spacing" as *;
@use "../../_styles/transitions" as *;
@use "@aleph/nought-sass-mixins/sass/utils";

$desktop-side-padding: to-rem($spacing-medium);
$mobile-padding: to-rem($spacing-standard);

.wrap {
  border-radius: 10px;
  background-color: $gray-100;
  overflow: hidden;
}

.grid {
  @include grid(10);

  align-items: center;
  row-gap: to-rem($spacing-medium);

  @include media-breakpoint-down(lg) {
    @include grid(6, false);
  }

  @include media-breakpoint-down(md) {
    @include grid(4, false);

    padding-top: $mobile-padding;
    padding-bottom: $mobile-padding;

    &__withImage {
      padding-bottom: 0;
    }
  }
}

.contentCol,
.codeCol {
  @include media-breakpoint-up(md) {
    padding-top: to-rem($spacing-large);
    padding-bottom: to-rem($spacing-large);
  }
}

.contentCol {
  @include columns(1, 5);

  @include media-breakpoint-down(lg) {
    @include columns(1, 4);
  }

  @include media-breakpoint-down(md) {
    padding-right: $mobile-padding;
    padding-left: $mobile-padding;
  }

  @include media-breakpoint-up(md) {
    padding-left: $desktop-side-padding;
  }
}

.codeCol {
  @include columns(5, 10);

  @include media-breakpoint-up(lg) {
    padding-left: $spacing-4x-large;
  }

  @include media-breakpoint-only(md) {
    padding-right: $desktop-side-padding;
  }

  @include media-breakpoint-down(md) {
    padding-right: $mobile-padding;
    padding-left: $mobile-padding;
  }
}

.imageWrap {
  @include columns(5, -1);
}

.codeCol,
.imageWrap {
  @include media-breakpoint-down(lg) {
    @include columns(4, -1);
  }
}

.header {
  @include h3;

  margin-bottom: to-rem($spacing-x-small);
}

.text {
  margin-bottom: to-rem($spacing-small);
}

.buttons {
  display: flex;
  flex-wrap: wrap;
  gap: to-rem($spacing-small);
}

.codeExamples {
  @include grid(1);

  align-items: start;
  border-radius: 4px;
  background-color: $white;
  overflow: auto;
}

.code {
  @include spanColumns(1);

  transition:
    opacity $transition-snappy,
    visibility $transition-snappy;
  font-size: to-rem(12px);
  opacity: 0;
  visibility: hidden;
  grid-column: 1;
  grid-row: 1;

  pre {
    max-height: 550px;
    margin: 0;
    padding-right: to-rem($spacing-standard);
    overflow: auto;
    -ms-overflow-style: none;
    scrollbar-width: none;

    &::-webkit-scrollbar {
      display: none;
    }
  }

  pre,
  code {
    font-family: inherit;
  }
}

// Increase count if more than 10 code examples
// Matching CSS instead of using active class to keep code highlighting server-side
@for $i from 0 through 10 {
  .tabs__active-#{$i} + .codeExamples .code__#{$i} {
    opacity: 1;
    visibility: visible;
  }
}

$tab-border-radius: 6px;

.tabs {
  display: flex;
  flex-wrap: wrap;
  margin-bottom: 2px;
  gap: 2px;
}

.tab {
  @include utils.buttonReset;
  @include paragraphXSmFont;

  flex: 1 1 min-content;
  padding: $spacing-x-small;
  transition: color $transition-snappy;
  background-color: $white;
  text-align: left;

  @include media-breakpoint-down(lg) {
    padding: 2.5%;
  }

  &:first-child {
    border-top-left-radius: $tab-border-radius;
    border-bottom-left-radius: $tab-border-radius;
  }

  &:last-child {
    border-top-right-radius: $tab-border-radius;
    border-bottom-right-radius: $tab-border-radius;
  }

  &__active {
    color: #000;
  }
}

.image {
  display: block;
  margin: 0 auto;
}
