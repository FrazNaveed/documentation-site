@use "../../_styles/mixins" as *;
@use "../../_styles/typography" as *;
@use "../../_styles/colors" as *;
@use "../../_styles/spacing" as *;
@use "../../_styles/transitions" as *;
@use "@aleph/nought-sass-mixins/sass/utils";

$desktop-side-padding: to-rem($spacing-medium);
$mobile-padding: to-rem($spacing-standard);

.wrap {
  border-radius: 10px;
  background-color: $gray-100;
  overflow: hidden;
}

.grid {
  @include grid(10);

  align-items: center;
  row-gap: to-rem($spacing-medium);

  @include media-breakpoint-down(lg) {
    @include grid(6, false);
  }

  @include media-breakpoint-down(md) {
    @include grid(4, false);

    padding-top: $mobile-padding;
    padding-bottom: $mobile-padding;

    &__withImage {
      padding-bottom: 0;
    }
  }
}

.contentCol,
.codeCol {
  @include media-breakpoint-up(md) {
    padding-top: to-rem($spacing-large);
    padding-bottom: to-rem($spacing-large);
  }
}

.contentCol {
  @include columns(1, 5);

  @include media-breakpoint-down(lg) {
    @include columns(1, 4);
  }

  @include media-breakpoint-down(md) {
    padding-right: $mobile-padding;
    padding-left: $mobile-padding;
  }

  @include media-breakpoint-up(md) {
    padding-left: $desktop-side-padding;
  }
}

.codeCol {
  @include columns(5, 10);

  @include media-breakpoint-up(lg) {
    padding-left: $spacing-4x-large;
  }

  @include media-breakpoint-only(md) {
    padding-right: $desktop-side-padding;
  }

  @include media-breakpoint-down(md) {
    padding-right: $mobile-padding;
    padding-left: $mobile-padding;
  }
}

.imageWrap {
  @include columns(5, -1);
}

.codeCol,
.imageWrap {
  @include media-breakpoint-down(lg) {
    @include columns(4, -1);
  }
}

.header {
  @include h3;

  margin-bottom: to-rem($spacing-x-small);
}

.text {
  margin-bottom: to-rem($spacing-small);
}

.buttons {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  gap: to-rem($spacing-small);
}

.codeExamples {
  display: grid;
  position: relative;
  align-items: start;
  border-radius: 4px;
  overflow: auto;
  grid-template-columns: repeat(1, 100%);
}

.codeWrap {
  @include spanColumns(1);

  height: 100%;
  transition:
    opacity $transition-snappy,
    visibility $transition-snappy;
  opacity: 0;
  visibility: hidden;
  grid-column: 1;
  grid-row: 1;
}

.code {
  @include fontStyle(12, 23);

  height: 100%;
  font-weight: 500;

  pre {
    height: 100%;
    max-height: 600px;
    margin: 0;
    padding: $spacing-small;
    white-space: pre-wrap;
    overflow: auto;
    -ms-overflow-style: none;
    scrollbar-width: none;

    &::-webkit-scrollbar {
      display: none;
    }
  }

  pre,
  code {
    font-family: inherit;
  }

  code {
    counter-reset: line;
    counter-increment: line 0;

    :global(.line)::before {
      display: inline-block;
      width: 1rem;
      margin-right: 1.5rem;
      color: rgba(0 0 0 / 40%);
      font-weight: 400;
      text-align: right;
      content: counter(line);
      counter-increment: line;
    }
  }
}

// Increase count if more than 10 code examples
// Matching CSS instead of using active class from React state on codeWrap to keep code highlighting server-side
@for $i from 0 through 10 {
  .tabs__active-#{$i} + .codeExamples .codeWrap__#{$i} {
    opacity: 1;
    visibility: visible;
  }
}

$tab-border-radius: 6px;

.tabs {
  display: flex;
  flex-wrap: wrap;
  margin-bottom: 2px;
  gap: 2px;
}

.tab {
  @include utils.buttonReset;
  @include paragraphXSmFont;

  position: relative;
  flex: 1 1 min-content;
  padding: $spacing-x-small;
  transition: color $transition-snappy;
  background-color: $white;
  text-align: left;

  @include media-breakpoint-down(lg) {
    padding: 2.5%;
  }

  &:first-child {
    border-top-left-radius: $tab-border-radius;
    border-bottom-left-radius: $tab-border-radius;
  }

  &:last-child {
    border-top-right-radius: $tab-border-radius;
    border-bottom-right-radius: $tab-border-radius;
  }

  &::after {
    transition: opacity $transition-snappy;
    opacity: 0;
  }

  &__active {
    color: #000;

    &::after {
      display: block;
      position: absolute;
      right: 0;
      bottom: 0;
      left: 0;
      height: 1px;
      background-color: $black;
      content: "";
      opacity: 1;
    }

    &:first-child::after {
      left: $tab-border-radius;
    }

    &:last-child::after {
      right: $tab-border-radius;
    }
  }
}

.copyButton {
  @include utils.buttonReset;
  @include paragraphXSmFont;

  position: absolute;
  right: $spacing-small;
  bottom: $spacing-small;
  border: 1px solid $black;
  background-color: $white;
  color: $black;
}

.image {
  display: block;
  margin: 0 auto;
}
