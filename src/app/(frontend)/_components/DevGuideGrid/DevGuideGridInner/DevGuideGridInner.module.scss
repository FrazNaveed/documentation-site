@use "../../../_styles/mixins" as *;
@use "../../../_styles/typography" as *;
@use "../../../_styles/colors" as *;
@use "../../../_styles/transitions" as *;
@use "../../../_styles/spacing" as *;
@use "@aleph/nought-sass-mixins/sass/utils";

.headerWrap {
  @include sectionHeaderMargin;

  @include media-breakpoint-up(md) {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    gap: to-rem($spacing-small);
  }
}

.header {
  @include sectionHeaderFont;

  margin-bottom: 0;
}

.showCount {
  @include paragraphXSmFont;

  margin-top: to-rem($spacing-x-small);
  margin-bottom: 0;

  @include media-breakpoint-up(md) {
    margin-top: to-rem(4px);
  }
}

.filters {
  display: flex;
  margin-right: -$container-padding;
  margin-bottom: to-rem($spacing-standard);
  margin-left: -$container-padding;
  padding-right: $container-padding;
  padding-left: $container-padding;
  overflow: auto hidden;
  scroll-padding: 0 $container-padding;
  scroll-snap-type: x mandatory;
  -ms-overflow-style: none;
  scrollbar-width: none;

  &::-webkit-scrollbar {
    display: none;
  }

  @include media-breakpoint-down(lg) {
    margin-right: -$container-padding-lg;
    margin-left: -$container-padding-lg;
    padding-right: $container-padding-lg;
    padding-left: $container-padding-lg;
    scroll-padding: 0 $container-padding-lg;
  }

  @include media-breakpoint-down(md) {
    margin-right: -$container-padding-md;
    margin-left: -$container-padding-md;
    padding-right: $container-padding-md;
    padding-left: $container-padding-md;
    scroll-padding: 0 $container-padding-md;
  }
}

.filterList {
  @include utils.listReset;

  display: inline-flex;
  flex-shrink: 0;
  align-items: center;
  padding: to-rem(5px);
  border-radius: 14px;
  background-color: $pink-50;
  gap: to-rem($spacing-small) to-rem(5px);
}

.filterButton {
  @include utils.buttonReset;
  @include paragraphSmFont;

  display: flex;
  align-items: center;
  padding: to-rem($spacing-x-small) to-rem($spacing-small);
  transition:
    background-color $transition-speed-default,
    color $transition-speed-default,
    filter $transition-speed-default;
  border-radius: 10px;
  color: $pink-900;
  gap: to-rem(4px);

  &:hover,
  &:focus,
  &:active,
  &.active {
    background-color: $pink-900;
    color: $white;

    .filterIcon {
      filter: brightness(0) invert(1);
    }
  }
}

.content {
  @include grid;

  row-gap: $grid-column-gap;

  @include media-breakpoint-down(md) {
    row-gap: to-rem($spacing-standard);
  }
}

.devGuide {
  @include spanColumns(4);

  padding: $spacing-medium $spacing-standard $spacing-standard;
  border: 1px solid $gray-200;
  border-radius: 6px;

  &,
  &:visited,
  &:hover,
  &:focus,
  &:active {
    color: inherit;
  }

  > :last-child {
    margin-bottom: 0;
  }

  @include media-breakpoint-up(md) {
    display: flex;
    flex-direction: column;
  }
}

.product {
  display: flex;
  align-items: center;
  margin-bottom: to-rem($spacing-standard);
  gap: to-rem($spacing-x-small);

  @include media-breakpoint-down(lg) {
    margin-bottom: to-rem($spacing-small);
  }

  &_Icon {
    display: block;
    width: 35px;
    height: auto;
    filter: brightness(0);
  }

  &_Title {
    @include h5;

    margin-bottom: 0;
  }
}

.title {
  @include h5;

  margin-bottom: to-rem($spacing-standard);

  @include media-breakpoint-down(lg) {
    margin-bottom: to-rem($spacing-small);
  }
}

.description {
  @include paragraphXSmFont;

  margin-bottom: to-rem($spacing-medium);

  @include media-breakpoint-down(lg) {
    margin-bottom: to-rem($spacing-standard);
  }

  @include media-breakpoint-down(md) {
    margin-bottom: to-rem($spacing-small);
  }
}

.tags {
  display: flex;
  gap: to-rem($spacing-x-small);

  @include media-breakpoint-up(md) {
    margin-top: auto;
  }
}

.buttonWrap {
  margin-top: to-rem($spacing-standard);
  text-align: center;
}

.button {
  @include utils.buttonReset;
  @include bodyBase;
  @include link;
}
