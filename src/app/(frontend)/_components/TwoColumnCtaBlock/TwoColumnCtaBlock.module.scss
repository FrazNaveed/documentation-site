@use "../../_styles/mixins" as *;
@use "../../_styles/typography" as *;
@use "../../_styles/colors" as *;
@use "../../_styles/spacing" as *;
@use "@aleph/nought-sass-mixins/sass/utils";

.twoColumnCta {
  @include columns(1, -1);
}

.wrap {
  @include grid;
}

.imageWrap {
  grid-column: span 6;

  @include media-breakpoint-down(lg) {
    grid-column: span 4;
  }

  @include media-breakpoint-down(md) {
    grid-column: span 1;
  }
}

.image {
  width: 100%;
  height: auto;
}

.contentColumnWrap {
  margin-top: to-rem($spacing-7x-large);
  margin-bottom: to-rem(110px);
  grid-column: span 5;

  @include media-breakpoint-down(lg) {
    margin-top: to-rem($spacing-medium);
    grid-column: span 4;
  }

  @include media-breakpoint-down(md) {
    margin-top: to-rem($spacing-x-small);
    margin-bottom: to-rem($spacing-large);
  }
}

.eyebrow {
  @include label;

  margin-bottom: to-rem($spacing-small);
  color: $black;
  letter-spacing: to-rem(1.4px);

  @include media-breakpoint-down(lg) {
    margin-bottom: to-rem(4px);
  }

  @include media-breakpoint-down(md) {
    display: none;
  }

  &__mobile {
    @include showOnMobile;

    @include media-breakpoint-down(md) {
      display: flex;
      align-items: center;
      justify-content: center;
      grid-column: span 2;
    }

    margin-bottom: 0;
  }
}

.header {
  @include headerH4;

  margin-bottom: to-rem($spacing-small);
}

.text {
  margin-bottom: to-rem($spacing-small);
  color: $gray;
  line-height: to-rem(32px);
}

.buttonsWrap {
  display: flex;
  flex-wrap: wrap;
  gap: to-rem(12px) to-rem($spacing-small);
}
