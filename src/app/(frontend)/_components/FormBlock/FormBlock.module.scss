@use "../../_styles/colors" as *;
@use "../../_styles/spacing" as *;
@use "../../_styles/typography" as *;
@use "../../_styles/mixins" as *;
@use "@aleph/nought-sass-mixins/sass/utils";

.grid {
  @include grid;
}

.formBlockTitle,
.successMessage {
  @include columns(1, 9);

  @include media-breakpoint-down(lg) {
    @include columns(1, -1);
  }
}

.formBlockTitle {
  @include headerH5;

  margin-bottom: to-rem($spacing-standard);

  @include media-breakpoint-down(lg) {
    margin-bottom: to-rem($spacing-small);
  }
}

.form {
  row-gap: $spacing-standard;
}

.sectionLabel {
  @include columns(1, 9);
  @include paragraphSmFont;

  margin-top: to-rem($spacing-standard);
  margin-bottom: 0;
  color: $black;
}

.formSection {
  input:not([type="checkbox"]),
  select,
  textarea {
    width: 100%;
  }

  &__col1 {
    @include columns(1, 5);
  }

  &__col2 {
    @include columns(5, 9);
  }

  &__colWide {
    @include columns(1, 9);
  }

  &__full {
    @include columns(1, -1);
  }

  &__topMarginLg {
    margin-top: to-rem($spacing-x-large);

    @include media-breakpoint-down(lg) {
      margin-top: to-rem($spacing-standard);
    }
  }
}

.fieldset {
  padding: 0;
  border: 0;
}

.checkboxLabel {
  display: flex;
  align-items: center;
  gap: to-rem(12px);
}

$checkbox-width: 28px;
$checkbox-inner-checked-width: $checkbox-width - 12px;

.checkbox {
  position: relative;
  flex-shrink: 0;
  width: $checkbox-width;
  height: $checkbox-width;
  margin: 0;
  padding: 0;
  border-radius: 50%;
  border-color: $gray-200;
  appearance: none;

  &:checked::after {
    position: absolute;
    top: 50%;
    left: 50%;
    width: $checkbox-inner-checked-width;
    height: $checkbox-inner-checked-width;
    transform: translate(-50%, -50%);
    border-radius: 50%;
    background-color: $black;
    content: "";
  }
}

.consentText {
  @include paragraphSmFont;

  margin-bottom: 0;
  color: $black;
}

.consentNotice {
  @include paragraphXSmFont;

  margin-bottom: 0;
}

.submitWrap {
  @include columns(1, -1);

  margin-top: to-rem($spacing-medium);

  @include media-breakpoint-down(lg) {
    margin-top: to-rem($spacing-small);
  }
}

.label {
  @include utils.srOnly;
}

.error {
  margin-top: $spacing-x-small;
  color: $error-red;

  @include paragraphSmFont;
}

.hide {
  display: none;
}
