@use "../../_styles/colors" as *;
@use "../../_styles/mixins" as *;
@use "../../_styles/typography" as *;
@use "../../_styles/spacing" as *;
@use "../../_styles/transitions" as *;

.wrap {
  @include fullWidthBreakout;

  padding: $spacing-large 0;
  transition: background-color $transition-snappy;
  background-color: transparent;
  overflow: hidden;

  &:hover {
    background-color: $pink-600;
  }
}

.container {
  @include containerGrid;

  position: relative;
}

.content {
  position: relative;
  max-height: 490px;
  padding-top: $spacing-medium;
  transition: color $transition-snappy;
  color: $black;
  aspect-ratio: 2.4;

  @include columns(1, -1);

  @include media-breakpoint-down(md) {
    min-height: 260px;
    aspect-ratio: inherit;
  }

  .wrap:hover & {
    color: $white;
  }
}

.header {
  margin-bottom: 0;
  transition: color $transition-snappy;
  color: $black;

  @include hugeHeader;

  @include media-breakpoint-down(md) {
    @include fontStyle(59, 59);
  }

  .wrap:hover & {
    color: $white;
  }
}

.counter {
  @include headerDesktopH3;
}

.text {
  @include paragraphXSm;
}

.bgGraphWrap {
  position: absolute;
  text-align: center;
  inset: 0;

  @include media-breakpoint-down(md) {
    inset: auto 0 0;
  }
}

.dataLine {
  transition: stroke-dashoffset 1s ease;
  stroke-dasharray: 1390; /* Large enough to cover any length */
  stroke-dashoffset: 1390; /* Fully "undrawn" */

  &.draw {
    animation: draw-line 2s ease forwards;
  }
}

@keyframes draw-line {
  from {
    stroke-dashoffset: 1390;
  }

  to {
    stroke-dashoffset: 0;
  }
}

.graph {
  width: auto;
  max-width: 100%;
  height: 100%;
  margin: auto;
  fill: none;

  .line {
    stroke: #d1d1d1;
  }

  .highlight {
    stroke: #fd6f8c;

    &Fill {
      fill: #fd6f8c;
    }

    .wrap:hover & {
      stroke: $white;

      &Fill {
        fill: $white;
      }
    }
  }

  .gray-fill {
    fill: #777;
  }
}

.dataPoint {
  transition: opacity 0.5s ease;
  opacity: 0;
}

@keyframes fade-in-grow {
  0% {
    opacity: 0;
  }

  70% {
    opacity: 1;
  }

  100% {
    opacity: 1;
  }
}

.dataPointVisible {
  animation: fade-in-grow 0.6s forwards;
}
