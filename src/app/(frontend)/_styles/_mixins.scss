@use "sass:math";
@use "./spacing" as *;
@use "./colors" as *;

$container-width-flare: 1400px;
$container-padding-flare: 24px;
$container-padding-lg: 18px;
$container-padding-md: 16px;
$grid-column-gap-flare: 20px;
$breakpoint-xs: 0;
$breakpoint-sm: 576px;
$breakpoint-md: 768px;
$breakpoint-lg: 1025px;
$breakpoint-xl: 1401px;

@forward "@aleph/nought-sass-mixins" with (
  $grid-column-count: 12,
  $grid-column-gap: $grid-column-gap-flare,
  $container-width: $container-width-flare,
  $container-padding: $container-padding-flare,
  $container-responsive-padding: (
    lg: $container-padding-lg,
    md: $container-padding-md,
  ),
  $grid-responsive-column-counts: (
    lg: 8,
    md: 4,
  ),
  $grid-breakpoints: (
    xs: $breakpoint-xs,
    sm: $breakpoint-sm,
    md: $breakpoint-md,
    lg: $breakpoint-lg,
    xl: $breakpoint-xl,
  )
);

@use "@aleph/nought-sass-mixins" as *;

@mixin container-breakpoint-up(
  $name,
  $container-name: "",
  $breakpoints: $grid-breakpoints
) {
  $min: breakpoint-min($name, $breakpoints);

  @if $min {
    @container #{$container-name} (width >= #{$min}) {
      @content;
    }
  } @else {
    @content;
  }
}

@mixin container-breakpoint-down(
  $name,
  $container-name: "",
  $breakpoints: $grid-breakpoints
) {
  $max: breakpoint-max($name, $breakpoints);

  @if $max {
    @container #{$container-name} (width <= #{$max}) {
      @content;
    }
  } @else {
    @content;
  }
}

@mixin container-breakpoint-only(
  $name,
  $container-name: "",
  $breakpoints: $grid-breakpoints
) {
  $min: breakpoint-min($name, $breakpoints);
  $next: breakpoint-next($name, $breakpoints);
  $max: breakpoint-max($next, $breakpoints);

  @if $min != null and $max != null {
    @container #{$container-name} (min-width: #{$min}) and (max-width: #{$max}) {
      @content;
    }
  } @else if $max == null {
    @include container-breakpoint-up($name, $container-name, $breakpoints) {
      @content;
    }
  } @else if $min == null {
    @include container-breakpoint-down($next, $container-name, $breakpoints) {
      @content;
    }
  }
}

@mixin container-breakpoint-between(
  $lower,
  $upper,
  $container-name: "",
  $breakpoints: $grid-breakpoints
) {
  $min: breakpoint-min($lower, $breakpoints);
  $max: breakpoint-max($upper, $breakpoints);

  @if $min != null and $max != null {
    @container #{$container-name} (min-width: #{$min}) and (max-width: #{$max}) {
      @content;
    }
  } @else if $max == null {
    @include container-breakpoint-up($lower, $container-name, $breakpoints) {
      @content;
    }
  } @else if $min == null {
    @include container-breakpoint-down($upper, $container-name, $breakpoints) {
      @content;
    }
  }
}

$root-font-size-number: 20;
$root-font-size: $root-font-size-number * 1px;
// Convert pixels to rem
@function to-rem($pixelSize) {
  $remSize: math.div($pixelSize, $root-font-size);

  @return $remSize * 1rem;
}

@mixin pageWrap() {
  padding-bottom: $spacing-7x-large;
}

@mixin lightGrayCard() {
  border: 1px solid $gray-100;
  border-radius: 10px;
  background-color: $gray-50;
}

@mixin videoWrap {
  position: relative;
  height: 0;
  padding-top: 56.25%;
}

@mixin pageComponentSpacing {
  margin-top: to-rem($spacing-xxx-large);
  margin-bottom: to-rem($spacing-xxx-large);

  @include media-breakpoint-down(lg) {
    margin-top: to-rem($spacing-large);
    margin-bottom: to-rem($spacing-large);
  }

  @include media-breakpoint-down(md) {
    margin-top: to-rem($spacing-medium);
    margin-bottom: to-rem($spacing-medium);
  }

  &:last-child {
    margin-bottom: 0;
  }
}

@mixin sectionHeaderMargin {
  margin-bottom: to-rem($spacing-medium);

  @include media-breakpoint-down(lg) {
    margin-bottom: to-rem($spacing-standard);
  }

  @include media-breakpoint-down(md) {
    margin-bottom: to-rem($spacing-small);
  }
}

@mixin columnNarrow {
  @include spanColumns(4);

  @include media-breakpoint-down(lg) {
    @include spanColumns(2);
  }

  @include media-breakpoint-down(md) {
    @include spanColumns(4);
  }
}

@mixin columnWide {
  @include spanColumns(5);

  @include media-breakpoint-down(lg) {
    @include spanColumns(4);
  }
}

@mixin columnEven {
  @include spanColumns(5);
}

@mixin showOnMobile {
  display: none;

  @include media-breakpoint-down(md) {
    display: block;
  }
}
