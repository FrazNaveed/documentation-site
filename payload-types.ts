/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FeaturedGrantsCountries".
 */
export type FeaturedGrantsCountries =
  | {
      country:
        | 'AF'
        | 'AX'
        | 'AL'
        | 'DZ'
        | 'AS'
        | 'AD'
        | 'AO'
        | 'AI'
        | 'AQ'
        | 'AG'
        | 'AR'
        | 'AM'
        | 'AW'
        | 'AU'
        | 'AT'
        | 'AZ'
        | 'BS'
        | 'BH'
        | 'BD'
        | 'BB'
        | 'BY'
        | 'BE'
        | 'BZ'
        | 'BJ'
        | 'BM'
        | 'BT'
        | 'BO'
        | 'BQ'
        | 'BA'
        | 'BW'
        | 'BV'
        | 'BR'
        | 'IO'
        | 'BN'
        | 'BG'
        | 'BF'
        | 'BI'
        | 'CV'
        | 'KH'
        | 'CM'
        | 'CA'
        | 'KY'
        | 'CF'
        | 'TD'
        | 'CL'
        | 'CN'
        | 'CX'
        | 'CC'
        | 'CO'
        | 'KM'
        | 'CG'
        | 'CD'
        | 'CK'
        | 'CR'
        | 'HR'
        | 'CU'
        | 'CW'
        | 'CY'
        | 'CZ'
        | 'CI'
        | 'DK'
        | 'DJ'
        | 'DM'
        | 'DO'
        | 'EC'
        | 'EG'
        | 'SV'
        | 'GQ'
        | 'ER'
        | 'EE'
        | 'SZ'
        | 'ET'
        | 'FK'
        | 'FO'
        | 'FJ'
        | 'FI'
        | 'FR'
        | 'GF'
        | 'PF'
        | 'TF'
        | 'GA'
        | 'GM'
        | 'GE'
        | 'DE'
        | 'GH'
        | 'GI'
        | 'GR'
        | 'GL'
        | 'GD'
        | 'GP'
        | 'GU'
        | 'GT'
        | 'GG'
        | 'GN'
        | 'GW'
        | 'GY'
        | 'HT'
        | 'HM'
        | 'VA'
        | 'HN'
        | 'HK'
        | 'HU'
        | 'IS'
        | 'IN'
        | 'ID'
        | 'IR'
        | 'IQ'
        | 'IE'
        | 'IM'
        | 'IL'
        | 'IT'
        | 'JM'
        | 'JP'
        | 'JE'
        | 'JO'
        | 'KZ'
        | 'KE'
        | 'KI'
        | 'KP'
        | 'KR'
        | 'KW'
        | 'KG'
        | 'LA'
        | 'LV'
        | 'LB'
        | 'LS'
        | 'LR'
        | 'LY'
        | 'LI'
        | 'LT'
        | 'LU'
        | 'MO'
        | 'MG'
        | 'MW'
        | 'MY'
        | 'MV'
        | 'ML'
        | 'MT'
        | 'MH'
        | 'MQ'
        | 'MR'
        | 'MU'
        | 'YT'
        | 'MX'
        | 'FM'
        | 'MD'
        | 'MC'
        | 'MN'
        | 'ME'
        | 'MS'
        | 'MA'
        | 'MZ'
        | 'MM'
        | 'NA'
        | 'NR'
        | 'NP'
        | 'NL'
        | 'NC'
        | 'NZ'
        | 'NI'
        | 'NE'
        | 'NG'
        | 'NU'
        | 'NF'
        | 'MK'
        | 'MP'
        | 'NO'
        | 'OM'
        | 'PK'
        | 'PW'
        | 'PS'
        | 'PA'
        | 'PG'
        | 'PY'
        | 'PE'
        | 'PH'
        | 'PN'
        | 'PL'
        | 'PT'
        | 'PR'
        | 'QA'
        | 'RO'
        | 'RU'
        | 'RW'
        | 'RE'
        | 'BL'
        | 'SH'
        | 'KN'
        | 'LC'
        | 'MF'
        | 'PM'
        | 'VC'
        | 'WS'
        | 'SM'
        | 'ST'
        | 'SA'
        | 'SN'
        | 'RS'
        | 'SC'
        | 'SL'
        | 'SG'
        | 'SX'
        | 'SK'
        | 'SI'
        | 'SB'
        | 'SO'
        | 'ZA'
        | 'GS'
        | 'SS'
        | 'ES'
        | 'LK'
        | 'SD'
        | 'SR'
        | 'SJ'
        | 'SE'
        | 'CH'
        | 'SY'
        | 'TW'
        | 'TJ'
        | 'TZ'
        | 'TH'
        | 'TL'
        | 'TG'
        | 'TK'
        | 'TO'
        | 'TT'
        | 'TN'
        | 'TR'
        | 'TM'
        | 'TC'
        | 'TV'
        | 'UG'
        | 'UA'
        | 'AE'
        | 'GB'
        | 'US'
        | 'UY'
        | 'UZ'
        | 'VU'
        | 'VE'
        | 'VN'
        | 'EH'
        | 'YE'
        | 'ZM'
        | 'ZW';
      id?: string | null;
    }[]
  | null;
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FeaturedGrantsTopCategories".
 */
export type FeaturedGrantsTopCategories =
  | {
      type: number | GrantType;
      number?: number | null;
      id?: string | null;
    }[]
  | null;
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LinkBandLinks".
 */
export type LinkBandLinks =
  | {
      linkText?: string | null;
      linkUrl?: string | null;
      id?: string | null;
    }[]
  | null;
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ImageTextCards".
 */
export type ImageTextCards =
  | {
      cardImage?: (number | null) | Media;
      cardHeader?: string | null;
      cardText?: {
        root: {
          type: string;
          children: {
            type: string;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      } | null;
      id?: string | null;
    }[]
  | null;
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "StatsList".
 */
export type StatsList =
  | {
      label: string;
      stat: string;
      id?: string | null;
    }[]
  | null;
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Sections".
 */
export type Sections =
  | {
      name: string;
      rows?: Rows;
      id?: string | null;
    }[]
  | null;
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Rows".
 */
export type Rows =
  | {
      rowLabel?: string | null;
      column1Data: {
        root: {
          type: string;
          children: {
            type: string;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      };
      column2Data: {
        root: {
          type: string;
          children: {
            type: string;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      };
      id?: string | null;
    }[]
  | null;
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PointsList".
 */
export type PointsList = {
  icon?: (number | null) | Media;
  header: string;
  text: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  addLogos?: boolean | null;
  logos?:
    | {
        logo?: (number | null) | Media;
        link?: string | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
}[];
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ApplicationProcessSteps".
 */
export type ApplicationProcessSteps =
  | {
      title: string;
      description?: {
        root: {
          type: string;
          children: {
            type: string;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      } | null;
      /**
       * Graphic step titles will use the title field by default. Override it here.
       */
      graphicTitle?: string | null;
      /**
       * This will appear inside the colored area of the step in the graphic.
       */
      graphicText?: string | null;
      id?: string | null;
    }[]
  | null;

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  collections: {
    events: Event;
    grants: Grant;
    'grant-types': GrantType;
    pages: Page;
    users: User;
    media: Media;
    news: News;
    'news-types': NewsType;
    'news-sub-types': NewsSubType;
    people: Person;
    developerGuides: DeveloperGuide;
    developerGuideTags: DeveloperGuideTag;
    products: Product;
    wallets: Wallet;
    careers: Careers;
    'product-teams': ProductTeam;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    events: EventsSelect<false> | EventsSelect<true>;
    grants: GrantsSelect<false> | GrantsSelect<true>;
    'grant-types': GrantTypesSelect<false> | GrantTypesSelect<true>;
    pages: PagesSelect<false> | PagesSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    news: NewsSelect<false> | NewsSelect<true>;
    'news-types': NewsTypesSelect<false> | NewsTypesSelect<true>;
    'news-sub-types': NewsSubTypesSelect<false> | NewsSubTypesSelect<true>;
    people: PeopleSelect<false> | PeopleSelect<true>;
    developerGuides: DeveloperGuidesSelect<false> | DeveloperGuidesSelect<true>;
    developerGuideTags: DeveloperGuideTagsSelect<false> | DeveloperGuideTagsSelect<true>;
    products: ProductsSelect<false> | ProductsSelect<true>;
    wallets: WalletsSelect<false> | WalletsSelect<true>;
    careers: CareersSelect<false> | CareersSelect<true>;
    'product-teams': ProductTeamsSelect<false> | ProductTeamsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    eventSettings: EventSetting;
    selectPageFooterCtaSocialChannels: SelectPageFooterCtaSocialChannel;
    'social-channels': SocialChannel;
  };
  globalsSelect: {
    eventSettings: EventSettingsSelect<false> | EventSettingsSelect<true>;
    selectPageFooterCtaSocialChannels: SelectPageFooterCtaSocialChannelsSelect<false> | SelectPageFooterCtaSocialChannelsSelect<true>;
    'social-channels': SocialChannelsSelect<false> | SocialChannelsSelect<true>;
  };
  locale: 'en' | 'es' | 'de';
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "events".
 */
export interface Event {
  id: number;
  title: string;
  startDate: string;
  startTime?: string | null;
  endDate?: string | null;
  endTime?: string | null;
  country:
    | 'AF'
    | 'AX'
    | 'AL'
    | 'DZ'
    | 'AS'
    | 'AD'
    | 'AO'
    | 'AI'
    | 'AQ'
    | 'AG'
    | 'AR'
    | 'AM'
    | 'AW'
    | 'AU'
    | 'AT'
    | 'AZ'
    | 'BS'
    | 'BH'
    | 'BD'
    | 'BB'
    | 'BY'
    | 'BE'
    | 'BZ'
    | 'BJ'
    | 'BM'
    | 'BT'
    | 'BO'
    | 'BQ'
    | 'BA'
    | 'BW'
    | 'BV'
    | 'BR'
    | 'IO'
    | 'BN'
    | 'BG'
    | 'BF'
    | 'BI'
    | 'CV'
    | 'KH'
    | 'CM'
    | 'CA'
    | 'KY'
    | 'CF'
    | 'TD'
    | 'CL'
    | 'CN'
    | 'CX'
    | 'CC'
    | 'CO'
    | 'KM'
    | 'CG'
    | 'CD'
    | 'CK'
    | 'CR'
    | 'HR'
    | 'CU'
    | 'CW'
    | 'CY'
    | 'CZ'
    | 'CI'
    | 'DK'
    | 'DJ'
    | 'DM'
    | 'DO'
    | 'EC'
    | 'EG'
    | 'SV'
    | 'GQ'
    | 'ER'
    | 'EE'
    | 'SZ'
    | 'ET'
    | 'FK'
    | 'FO'
    | 'FJ'
    | 'FI'
    | 'FR'
    | 'GF'
    | 'PF'
    | 'TF'
    | 'GA'
    | 'GM'
    | 'GE'
    | 'DE'
    | 'GH'
    | 'GI'
    | 'GR'
    | 'GL'
    | 'GD'
    | 'GP'
    | 'GU'
    | 'GT'
    | 'GG'
    | 'GN'
    | 'GW'
    | 'GY'
    | 'HT'
    | 'HM'
    | 'VA'
    | 'HN'
    | 'HK'
    | 'HU'
    | 'IS'
    | 'IN'
    | 'ID'
    | 'IR'
    | 'IQ'
    | 'IE'
    | 'IM'
    | 'IL'
    | 'IT'
    | 'JM'
    | 'JP'
    | 'JE'
    | 'JO'
    | 'KZ'
    | 'KE'
    | 'KI'
    | 'KP'
    | 'KR'
    | 'KW'
    | 'KG'
    | 'LA'
    | 'LV'
    | 'LB'
    | 'LS'
    | 'LR'
    | 'LY'
    | 'LI'
    | 'LT'
    | 'LU'
    | 'MO'
    | 'MG'
    | 'MW'
    | 'MY'
    | 'MV'
    | 'ML'
    | 'MT'
    | 'MH'
    | 'MQ'
    | 'MR'
    | 'MU'
    | 'YT'
    | 'MX'
    | 'FM'
    | 'MD'
    | 'MC'
    | 'MN'
    | 'ME'
    | 'MS'
    | 'MA'
    | 'MZ'
    | 'MM'
    | 'NA'
    | 'NR'
    | 'NP'
    | 'NL'
    | 'NC'
    | 'NZ'
    | 'NI'
    | 'NE'
    | 'NG'
    | 'NU'
    | 'NF'
    | 'MK'
    | 'MP'
    | 'NO'
    | 'OM'
    | 'PK'
    | 'PW'
    | 'PS'
    | 'PA'
    | 'PG'
    | 'PY'
    | 'PE'
    | 'PH'
    | 'PN'
    | 'PL'
    | 'PT'
    | 'PR'
    | 'QA'
    | 'RO'
    | 'RU'
    | 'RW'
    | 'RE'
    | 'BL'
    | 'SH'
    | 'KN'
    | 'LC'
    | 'MF'
    | 'PM'
    | 'VC'
    | 'WS'
    | 'SM'
    | 'ST'
    | 'SA'
    | 'SN'
    | 'RS'
    | 'SC'
    | 'SL'
    | 'SG'
    | 'SX'
    | 'SK'
    | 'SI'
    | 'SB'
    | 'SO'
    | 'ZA'
    | 'GS'
    | 'SS'
    | 'ES'
    | 'LK'
    | 'SD'
    | 'SR'
    | 'SJ'
    | 'SE'
    | 'CH'
    | 'SY'
    | 'TW'
    | 'TJ'
    | 'TZ'
    | 'TH'
    | 'TL'
    | 'TG'
    | 'TK'
    | 'TO'
    | 'TT'
    | 'TN'
    | 'TR'
    | 'TM'
    | 'TC'
    | 'TV'
    | 'UG'
    | 'UA'
    | 'AE'
    | 'GB'
    | 'US'
    | 'UY'
    | 'UZ'
    | 'VU'
    | 'VE'
    | 'VN'
    | 'EH'
    | 'YE'
    | 'ZM'
    | 'ZW';
  location: string;
  flareInvolvement: string;
  eventLink?: string | null;
  button?: {
    buttonType?: ('announcement' | 'rsvp') | null;
    link?: string | null;
  };
  featured?: boolean | null;
  /**
   * This will override Flare Involvement as the eyebrow in the featured event hero
   */
  featuredHeroEyebrow?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "grants".
 */
export interface Grant {
  id: number;
  name: string;
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  logo?: (number | null) | Media;
  country:
    | 'AF'
    | 'AX'
    | 'AL'
    | 'DZ'
    | 'AS'
    | 'AD'
    | 'AO'
    | 'AI'
    | 'AQ'
    | 'AG'
    | 'AR'
    | 'AM'
    | 'AW'
    | 'AU'
    | 'AT'
    | 'AZ'
    | 'BS'
    | 'BH'
    | 'BD'
    | 'BB'
    | 'BY'
    | 'BE'
    | 'BZ'
    | 'BJ'
    | 'BM'
    | 'BT'
    | 'BO'
    | 'BQ'
    | 'BA'
    | 'BW'
    | 'BV'
    | 'BR'
    | 'IO'
    | 'BN'
    | 'BG'
    | 'BF'
    | 'BI'
    | 'CV'
    | 'KH'
    | 'CM'
    | 'CA'
    | 'KY'
    | 'CF'
    | 'TD'
    | 'CL'
    | 'CN'
    | 'CX'
    | 'CC'
    | 'CO'
    | 'KM'
    | 'CG'
    | 'CD'
    | 'CK'
    | 'CR'
    | 'HR'
    | 'CU'
    | 'CW'
    | 'CY'
    | 'CZ'
    | 'CI'
    | 'DK'
    | 'DJ'
    | 'DM'
    | 'DO'
    | 'EC'
    | 'EG'
    | 'SV'
    | 'GQ'
    | 'ER'
    | 'EE'
    | 'SZ'
    | 'ET'
    | 'FK'
    | 'FO'
    | 'FJ'
    | 'FI'
    | 'FR'
    | 'GF'
    | 'PF'
    | 'TF'
    | 'GA'
    | 'GM'
    | 'GE'
    | 'DE'
    | 'GH'
    | 'GI'
    | 'GR'
    | 'GL'
    | 'GD'
    | 'GP'
    | 'GU'
    | 'GT'
    | 'GG'
    | 'GN'
    | 'GW'
    | 'GY'
    | 'HT'
    | 'HM'
    | 'VA'
    | 'HN'
    | 'HK'
    | 'HU'
    | 'IS'
    | 'IN'
    | 'ID'
    | 'IR'
    | 'IQ'
    | 'IE'
    | 'IM'
    | 'IL'
    | 'IT'
    | 'JM'
    | 'JP'
    | 'JE'
    | 'JO'
    | 'KZ'
    | 'KE'
    | 'KI'
    | 'KP'
    | 'KR'
    | 'KW'
    | 'KG'
    | 'LA'
    | 'LV'
    | 'LB'
    | 'LS'
    | 'LR'
    | 'LY'
    | 'LI'
    | 'LT'
    | 'LU'
    | 'MO'
    | 'MG'
    | 'MW'
    | 'MY'
    | 'MV'
    | 'ML'
    | 'MT'
    | 'MH'
    | 'MQ'
    | 'MR'
    | 'MU'
    | 'YT'
    | 'MX'
    | 'FM'
    | 'MD'
    | 'MC'
    | 'MN'
    | 'ME'
    | 'MS'
    | 'MA'
    | 'MZ'
    | 'MM'
    | 'NA'
    | 'NR'
    | 'NP'
    | 'NL'
    | 'NC'
    | 'NZ'
    | 'NI'
    | 'NE'
    | 'NG'
    | 'NU'
    | 'NF'
    | 'MK'
    | 'MP'
    | 'NO'
    | 'OM'
    | 'PK'
    | 'PW'
    | 'PS'
    | 'PA'
    | 'PG'
    | 'PY'
    | 'PE'
    | 'PH'
    | 'PN'
    | 'PL'
    | 'PT'
    | 'PR'
    | 'QA'
    | 'RO'
    | 'RU'
    | 'RW'
    | 'RE'
    | 'BL'
    | 'SH'
    | 'KN'
    | 'LC'
    | 'MF'
    | 'PM'
    | 'VC'
    | 'WS'
    | 'SM'
    | 'ST'
    | 'SA'
    | 'SN'
    | 'RS'
    | 'SC'
    | 'SL'
    | 'SG'
    | 'SX'
    | 'SK'
    | 'SI'
    | 'SB'
    | 'SO'
    | 'ZA'
    | 'GS'
    | 'SS'
    | 'ES'
    | 'LK'
    | 'SD'
    | 'SR'
    | 'SJ'
    | 'SE'
    | 'CH'
    | 'SY'
    | 'TW'
    | 'TJ'
    | 'TZ'
    | 'TH'
    | 'TL'
    | 'TG'
    | 'TK'
    | 'TO'
    | 'TT'
    | 'TN'
    | 'TR'
    | 'TM'
    | 'TC'
    | 'TV'
    | 'UG'
    | 'UA'
    | 'AE'
    | 'GB'
    | 'US'
    | 'UY'
    | 'UZ'
    | 'VU'
    | 'VE'
    | 'VN'
    | 'EH'
    | 'YE'
    | 'ZM'
    | 'ZW';
  announcementLink?: string | null;
  grantCategory?: (number | GrantType)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "grant-types".
 */
export interface GrantType {
  id: number;
  title: string;
  /**
   * Slug is automatically generated from the Title on initial save
   */
  slug: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  title?: string | null;
  /**
   * Slug is automatically generated from the Title on initial save
   */
  slug: string;
  hero?: PageHero;
  hideHero?: boolean | null;
  /**
   * Select a page and it will be linked to as the previous page in the footer.
   */
  previousPage?: (number | null) | Page;
  /**
   * Select a page to be linked as the next page in the footer.
   */
  nextPage?: (number | null) | Page;
  /**
   * Optionally specify what type of next or previous link this is. Defaults to "Guide" but could be something like "Page", "Article", etc.
   */
  linkType?: string | null;
  pageBanner?: {
    togglePageBanner?: boolean | null;
    bannerText?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
  };
  devHub?: DevHub;
  teamGrid?: TeamGrid;
  walletsGrid?: WalletsGrid;
  careers?: Careers;
  components?:
    | (
        | Columns
        | ImageTextGridBlock
        | RichTextBlock
        | PastFeaturedGrantsGridBlock
        | Stats
        | TableWithDrawers
        | ITalkingPoints
        | TwoColumns
        | ApplicationProcess
        | OfficialChannelsBlock
        | IRegionalLinkGrid
        | FlareDropDates
        | ITwoColumnCta
        | VideoEmbedBlock
        | ICodeCta
        | IFeaturedNewsCarouselBlock
        | IBrandLogoRoll
        | IMarqueeGallery
        | IResponsiveImage
        | IStepsBlock
        | ILayerCake
        | IFastPanel
        | IDecentralizedPanel
        | ISecurePanel
        | IEventsWidget
        | IContactFormBlock
        | INewsletterSignupFormBlock
        | IPageTeaserGrid
        | ITokenLinkBlock
      )[]
    | null;
  /**
   * Select a news type to display related posts on this page.
   */
  relatedNewsType?: (number | null) | NewsType;
  pageFooterCTA?: boolean | null;
  pageFooterCTAButton?: {
    buttonText?: string | null;
    buttonLink?: string | null;
    buttonSecondaryText?: string | null;
    buttonSecondaryLink?: string | null;
    backgroundImage?: (number | null) | Media;
    /**
     * Choose how the background image is displayed
     */
    backgroundImageStyle?: ('flipped' | 'offset') | null;
    /**
     * Display Social Channels as buttons instead of CTA buttons. Manage in Globals under Page Footer CTA Social Channels.
     */
    useSocialMediaButtons?: boolean | null;
  };
  pageTeaser?: IPageTeaser;
  pageTemplate: 'default' | 'devHub' | 'events' | 'fullWidth' | 'team' | 'wallets' | 'careers';
  meta?: {
    title?: string | null;
    description?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PageHero".
 */
export interface PageHero {
  style: 'standard' | 'protocol' | 'grants' | 'centered';
  headline: string;
  /**
   * Defaults to Page Title if empty.
   */
  eyebrow?: string | null;
  hideEyebrow?: boolean | null;
  buttonText?: string | null;
  buttonLink?: string | null;
  buttonSecondaryText?: string | null;
  buttonSecondaryLink?: string | null;
  textLinkText?: string | null;
  textLinkButton?: string | null;
  backgroundImage?: (number | null) | Media;
  showBackgroundVideo?: boolean | null;
  logo?: (number | null) | Media;
  text?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  grantsInfo?: PageHeroGrantsInfo;
  protocolInfo?: PageHeroProtocolInfo;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PageHeroGrantsInfo".
 */
export interface PageHeroGrantsInfo {
  grantsAwarded?: number | null;
  countries?: FeaturedGrantsCountries;
  topCategories?: FeaturedGrantsTopCategories;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PageHeroProtocolInfo".
 */
export interface PageHeroProtocolInfo {
  providersLabelIcon?: (number | null) | Media;
  providersLabelOverride?: string | null;
  providers?: number | null;
  providersUnit?: string | null;
  feedsLabelIcon?: (number | null) | Media;
  feedsLabelOverride?: string | null;
  feeds?: number | null;
  tokensLabelIcon?: (number | null) | Media;
  tokensLabelOverride?: string | null;
  stakeTokens?: number | null;
  stakeValue?: number | null;
  averageBlockTimeLabelIcon?: (number | null) | Media;
  averageBlockTimeLabelOverride?: string | null;
  averageBlockTime?: number | null;
  averageBlockTimeUnit?: string | null;
}
/**
 * Settings for the Dev Hub Page Template. Manage content using the Products Collection.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "DevHub".
 */
export interface DevHub {
  productsGrid?: (number | Product)[] | null;
  linkBand?: {
    /**
     * Fill in to override default title "Explorers & Resources"
     */
    linkBandTitle?: string | null;
    links?: LinkBandLinks;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
  id: number;
  title: string;
  /**
   * Slug is automatically generated from the Title on initial save
   */
  slug: string;
  /**
   * External Link field will override internal Slug field on the Developer Hub page. Layer Cake component will link to internal Slug.
   */
  link?: string | null;
  icon?: (number | null) | Media;
  shortDescription?: string | null;
  /**
   * Title override for the Explore section
   */
  titleOverride?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Add title text above the Team Grid. Manage Team members using the People Collection.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TeamGrid".
 */
export interface TeamGrid {
  gridTitle?: string | null;
  team?: (number | Person)[] | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "people".
 */
export interface Person {
  id: number;
  fullName?: string | null;
  jobTitle?: string | null;
  headshot?: (number | null) | Media;
  updatedAt: string;
  createdAt: string;
}
/**
 * Add intro text above Wallets Grid. Manage Wallets using the Wallets Collection.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "WalletsGrid".
 */
export interface WalletsGrid {
  walletsGridIntro?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Select the wallets to display in a grid. Manage Wallets using the Wallets Collection.
   */
  wallets?: (number | Wallet)[] | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "wallets".
 */
export interface Wallet {
  id: number;
  name: string;
  logo?: (number | null) | Media;
  walletLink: string;
  flrFunctionality?: boolean | null;
  walletConnect?: boolean | null;
  tags?: ('wrap' | 'delegate' | 'stake' | 'autoclaim' | 'claim' | 'voting')[] | null;
  platforms?: ('iOS' | 'Android' | 'Hardware')[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Settings for the Careers Page Template. Manage listings using the Careers Collection.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "careers".
 */
export interface Careers {
  /**
   * Override default title "Open Roles"
   */
  pageTitle?: string | null;
  /**
   * Displays above career listings
   */
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Displays when no open roles are available
   */
  emptyListingsText?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Columns".
 */
export interface Columns {
  layout?: ('equal' | 'wideLeft' | 'wideRight') | null;
  /**
   * Align both columns to top of block. Default is centered vertically.
   */
  alignColumns?: boolean | null;
  /**
   * Add image or text to this column
   */
  leftColumnBlock?:
    | (
        | {
            image?: (number | null) | Media;
            id?: string | null;
            blockName?: string | null;
            blockType: 'colImage';
          }
        | RichText
      )[]
    | null;
  /**
   * Add image or text to this column
   */
  rightColumnBlock?:
    | (
        | {
            image?: (number | null) | Media;
            id?: string | null;
            blockName?: string | null;
            blockType: 'colImage';
          }
        | RichText
      )[]
    | null;
  createSideNavLink?: boolean | null;
  linkText?: string | null;
  blockMarginSettings?: boolean | null;
  /**
   * Set top margin to standard paragraph spacing
   */
  standardTopMargin?: boolean | null;
  /**
   * Set bottom margin to standard paragraph spacing
   */
  standardBottomMargin?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'columns';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "RichText".
 */
export interface RichText {
  richText?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'richText';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ImageTextGridBlock".
 */
export interface ImageTextGridBlock {
  imageTextGridTitle?: string | null;
  imageTextCardGrid?: ImageTextCards;
  createSideNavLink?: boolean | null;
  linkText?: string | null;
  blockMarginSettings?: boolean | null;
  /**
   * Set top margin to standard paragraph spacing
   */
  standardTopMargin?: boolean | null;
  /**
   * Set bottom margin to standard paragraph spacing
   */
  standardBottomMargin?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'imageTextGrid';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "RichTextBlock".
 */
export interface RichTextBlock {
  richText?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  createSideNavLink?: boolean | null;
  linkText?: string | null;
  blockMarginSettings?: boolean | null;
  /**
   * Set top margin to standard paragraph spacing
   */
  standardTopMargin?: boolean | null;
  /**
   * Set bottom margin to standard paragraph spacing
   */
  standardBottomMargin?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'richTextBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PastFeaturedGrantsGridBlock".
 */
export interface PastFeaturedGrantsGridBlock {
  gridTitle?: string | null;
  grantsGrid?: (number | Grant)[] | null;
  createSideNavLink?: boolean | null;
  linkText?: string | null;
  blockMarginSettings?: boolean | null;
  /**
   * Set top margin to standard paragraph spacing
   */
  standardTopMargin?: boolean | null;
  /**
   * Set bottom margin to standard paragraph spacing
   */
  standardBottomMargin?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'pastFeaturedGrantsGrid';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Stats".
 */
export interface Stats {
  /**
   * If checked, stats will be pulled automatically from an API endpoint for Flaredrop APR, Delegating APR and Staking APR.
   */
  pullFromApi?: boolean | null;
  stats?: StatsList;
  caption?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  createSideNavLink?: boolean | null;
  linkText?: string | null;
  blockMarginSettings?: boolean | null;
  /**
   * Set top margin to standard paragraph spacing
   */
  standardTopMargin?: boolean | null;
  /**
   * Set bottom margin to standard paragraph spacing
   */
  standardBottomMargin?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'stats';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Table with Drawers".
 */
export interface TableWithDrawers {
  column1Header: string;
  column2Header: string;
  sections?: Sections;
  createSideNavLink?: boolean | null;
  linkText?: string | null;
  blockMarginSettings?: boolean | null;
  /**
   * Set top margin to standard paragraph spacing
   */
  standardTopMargin?: boolean | null;
  /**
   * Set bottom margin to standard paragraph spacing
   */
  standardBottomMargin?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'tableDrawers';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ITalkingPoints".
 */
export interface ITalkingPoints {
  variation: 'standard' | 'textualGrid' | 'wideList';
  points: PointsList;
  createSideNavLink?: boolean | null;
  linkText?: string | null;
  blockMarginSettings?: boolean | null;
  /**
   * Set top margin to standard paragraph spacing
   */
  standardTopMargin?: boolean | null;
  /**
   * Set bottom margin to standard paragraph spacing
   */
  standardBottomMargin?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'talkingPoints';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "twoColumns".
 */
export interface TwoColumns {
  layout?: ('default' | 'reverse' | 'even') | null;
  ColumnOne?: {
    contentType?: ('image' | 'text') | null;
    image?: (number | null) | Media;
    text?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    imageAlignment?: ('center' | 'left' | 'right') | null;
    imageFill?: ('contain' | 'cover') | null;
  };
  ColumnTwo?: {
    contentType?: ('image' | 'text') | null;
    image?: (number | null) | Media;
    text?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    imageAlignment?: ('center' | 'left' | 'right') | null;
    imageFill?: ('contain' | 'cover') | null;
  };
  createSideNavLink?: boolean | null;
  linkText?: string | null;
  blockMarginSettings?: boolean | null;
  /**
   * Set top margin to standard paragraph spacing
   */
  standardTopMargin?: boolean | null;
  /**
   * Set bottom margin to standard paragraph spacing
   */
  standardBottomMargin?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'twoColumn';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ApplicationProcess".
 */
export interface ApplicationProcess {
  title?: string | null;
  steps?: ApplicationProcessSteps;
  createSideNavLink?: boolean | null;
  linkText?: string | null;
  blockMarginSettings?: boolean | null;
  /**
   * Set top margin to standard paragraph spacing
   */
  standardTopMargin?: boolean | null;
  /**
   * Set bottom margin to standard paragraph spacing
   */
  standardBottomMargin?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'applicationProcess';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "OfficialChannelsBlock".
 */
export interface OfficialChannelsBlock {
  title?: string | null;
  text?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  selectSocialChannels?: ('discord' | 'github' | 'linkedin' | 'medium' | 'telegram' | 'x' | 'youtube')[] | null;
  createSideNavLink?: boolean | null;
  linkText?: string | null;
  blockMarginSettings?: boolean | null;
  /**
   * Set top margin to standard paragraph spacing
   */
  standardTopMargin?: boolean | null;
  /**
   * Set bottom margin to standard paragraph spacing
   */
  standardBottomMargin?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'officialChannels';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "IRegionalLinkGrid".
 */
export interface IRegionalLinkGrid {
  title?: string | null;
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  links?:
    | {
        link: string;
        name: string;
        translatedName?: string | null;
        country?:
          | (
              | 'AF'
              | 'AX'
              | 'AL'
              | 'DZ'
              | 'AS'
              | 'AD'
              | 'AO'
              | 'AI'
              | 'AQ'
              | 'AG'
              | 'AR'
              | 'AM'
              | 'AW'
              | 'AU'
              | 'AT'
              | 'AZ'
              | 'BS'
              | 'BH'
              | 'BD'
              | 'BB'
              | 'BY'
              | 'BE'
              | 'BZ'
              | 'BJ'
              | 'BM'
              | 'BT'
              | 'BO'
              | 'BQ'
              | 'BA'
              | 'BW'
              | 'BV'
              | 'BR'
              | 'IO'
              | 'BN'
              | 'BG'
              | 'BF'
              | 'BI'
              | 'CV'
              | 'KH'
              | 'CM'
              | 'CA'
              | 'KY'
              | 'CF'
              | 'TD'
              | 'CL'
              | 'CN'
              | 'CX'
              | 'CC'
              | 'CO'
              | 'KM'
              | 'CG'
              | 'CD'
              | 'CK'
              | 'CR'
              | 'HR'
              | 'CU'
              | 'CW'
              | 'CY'
              | 'CZ'
              | 'CI'
              | 'DK'
              | 'DJ'
              | 'DM'
              | 'DO'
              | 'EC'
              | 'EG'
              | 'SV'
              | 'GQ'
              | 'ER'
              | 'EE'
              | 'SZ'
              | 'ET'
              | 'FK'
              | 'FO'
              | 'FJ'
              | 'FI'
              | 'FR'
              | 'GF'
              | 'PF'
              | 'TF'
              | 'GA'
              | 'GM'
              | 'GE'
              | 'DE'
              | 'GH'
              | 'GI'
              | 'GR'
              | 'GL'
              | 'GD'
              | 'GP'
              | 'GU'
              | 'GT'
              | 'GG'
              | 'GN'
              | 'GW'
              | 'GY'
              | 'HT'
              | 'HM'
              | 'VA'
              | 'HN'
              | 'HK'
              | 'HU'
              | 'IS'
              | 'IN'
              | 'ID'
              | 'IR'
              | 'IQ'
              | 'IE'
              | 'IM'
              | 'IL'
              | 'IT'
              | 'JM'
              | 'JP'
              | 'JE'
              | 'JO'
              | 'KZ'
              | 'KE'
              | 'KI'
              | 'KP'
              | 'KR'
              | 'KW'
              | 'KG'
              | 'LA'
              | 'LV'
              | 'LB'
              | 'LS'
              | 'LR'
              | 'LY'
              | 'LI'
              | 'LT'
              | 'LU'
              | 'MO'
              | 'MG'
              | 'MW'
              | 'MY'
              | 'MV'
              | 'ML'
              | 'MT'
              | 'MH'
              | 'MQ'
              | 'MR'
              | 'MU'
              | 'YT'
              | 'MX'
              | 'FM'
              | 'MD'
              | 'MC'
              | 'MN'
              | 'ME'
              | 'MS'
              | 'MA'
              | 'MZ'
              | 'MM'
              | 'NA'
              | 'NR'
              | 'NP'
              | 'NL'
              | 'NC'
              | 'NZ'
              | 'NI'
              | 'NE'
              | 'NG'
              | 'NU'
              | 'NF'
              | 'MK'
              | 'MP'
              | 'NO'
              | 'OM'
              | 'PK'
              | 'PW'
              | 'PS'
              | 'PA'
              | 'PG'
              | 'PY'
              | 'PE'
              | 'PH'
              | 'PN'
              | 'PL'
              | 'PT'
              | 'PR'
              | 'QA'
              | 'RO'
              | 'RU'
              | 'RW'
              | 'RE'
              | 'BL'
              | 'SH'
              | 'KN'
              | 'LC'
              | 'MF'
              | 'PM'
              | 'VC'
              | 'WS'
              | 'SM'
              | 'ST'
              | 'SA'
              | 'SN'
              | 'RS'
              | 'SC'
              | 'SL'
              | 'SG'
              | 'SX'
              | 'SK'
              | 'SI'
              | 'SB'
              | 'SO'
              | 'ZA'
              | 'GS'
              | 'SS'
              | 'ES'
              | 'LK'
              | 'SD'
              | 'SR'
              | 'SJ'
              | 'SE'
              | 'CH'
              | 'SY'
              | 'TW'
              | 'TJ'
              | 'TZ'
              | 'TH'
              | 'TL'
              | 'TG'
              | 'TK'
              | 'TO'
              | 'TT'
              | 'TN'
              | 'TR'
              | 'TM'
              | 'TC'
              | 'TV'
              | 'UG'
              | 'UA'
              | 'AE'
              | 'GB'
              | 'US'
              | 'UY'
              | 'UZ'
              | 'VU'
              | 'VE'
              | 'VN'
              | 'EH'
              | 'YE'
              | 'ZM'
              | 'ZW'
            )
          | null;
        id?: string | null;
      }[]
    | null;
  createSideNavLink?: boolean | null;
  linkText?: string | null;
  blockMarginSettings?: boolean | null;
  /**
   * Set top margin to standard paragraph spacing
   */
  standardTopMargin?: boolean | null;
  /**
   * Set bottom margin to standard paragraph spacing
   */
  standardBottomMargin?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'regionalLinkGrid';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FlareDropDates".
 */
export interface FlareDropDates {
  createSideNavLink?: boolean | null;
  linkText?: string | null;
  blockMarginSettings?: boolean | null;
  /**
   * Set top margin to standard paragraph spacing
   */
  standardTopMargin?: boolean | null;
  /**
   * Set bottom margin to standard paragraph spacing
   */
  standardBottomMargin?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'flareDropDates';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ITwoColumnCta".
 */
export interface ITwoColumnCta {
  variation?: ('standard' | 'alternate') | null;
  /**
   * Appears in left column. Appears in right column in Alternate variation.
   */
  image?: (number | null) | Media;
  eyebrow?: string | null;
  header?: string | null;
  text?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  primaryButtonText?: string | null;
  primaryButtonLink?: string | null;
  secondaryButtonText?: string | null;
  secondaryButtonLink?: string | null;
  createSideNavLink?: boolean | null;
  linkText?: string | null;
  blockMarginSettings?: boolean | null;
  /**
   * Set top margin to standard paragraph spacing
   */
  standardTopMargin?: boolean | null;
  /**
   * Set bottom margin to standard paragraph spacing
   */
  standardBottomMargin?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'twoColumnCta';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "VideoEmbedBlock".
 */
export interface VideoEmbedBlock {
  title?: string | null;
  url?: string | null;
  createSideNavLink?: boolean | null;
  linkText?: string | null;
  blockMarginSettings?: boolean | null;
  /**
   * Set top margin to standard paragraph spacing
   */
  standardTopMargin?: boolean | null;
  /**
   * Set bottom margin to standard paragraph spacing
   */
  standardBottomMargin?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'videoEmbedBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ICodeCta".
 */
export interface ICodeCta {
  header?: string | null;
  text?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  buttonText?: string | null;
  buttonLink?: string | null;
  buttonSecondaryText?: string | null;
  buttonSecondaryLink?: string | null;
  /**
   * Hide the code examples with the option of using an image instead.
   */
  hideCode?: boolean | null;
  /**
   * Code label will be "Solidity" by default. Override it here.
   */
  solidityLabelOverride?: string | null;
  codeSolidity?: string | null;
  /**
   * Code label will be "JavaScript" by default. Override it here.
   */
  javaScriptLabelOverride?: string | null;
  codeJs?: string | null;
  /**
   * Code label will be "Python" by default. Override it here.
   */
  pythonLabelOverride?: string | null;
  codePython?: string | null;
  /**
   * Code label will be "Rust" by default. Override it here.
   */
  rustLabelOverride?: string | null;
  codeRust?: string | null;
  /**
   * Code label will be "Go" by default. Override it here.
   */
  goLabelOverride?: string | null;
  codeGo?: string | null;
  /**
   * Used in place of code examples.
   */
  image?: (number | null) | Media;
  createSideNavLink?: boolean | null;
  linkText?: string | null;
  blockMarginSettings?: boolean | null;
  /**
   * Set top margin to standard paragraph spacing
   */
  standardTopMargin?: boolean | null;
  /**
   * Set bottom margin to standard paragraph spacing
   */
  standardBottomMargin?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'codeCta';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "IFeaturedNewsCarouselBlock".
 */
export interface IFeaturedNewsCarouselBlock {
  newsPosts?: (number | News)[] | null;
  createSideNavLink?: boolean | null;
  linkText?: string | null;
  blockMarginSettings?: boolean | null;
  /**
   * Set top margin to standard paragraph spacing
   */
  standardTopMargin?: boolean | null;
  /**
   * Set bottom margin to standard paragraph spacing
   */
  standardBottomMargin?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'featuredNewsCarousel';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "news".
 */
export interface News {
  id: number;
  title?: string | null;
  /**
   * Slug is automatically generated from the Title on initial save
   */
  slug: string;
  excerpt?: string | null;
  publishDate: string;
  author: number | User;
  type: number | NewsType;
  subtype?: (number | null) | NewsSubType;
  contentType?: ('video' | 'podcast') | null;
  relatedPosts?: (number | News)[] | null;
  teaserThumbnail?: (number | null) | Media;
  logos?:
    | {
        image: number | Media;
        id?: string | null;
      }[]
    | null;
  /**
   * When checked, this news item will appear at or near the top of the news page, superseded by other featured news with a more recent publish date.
   */
  featured?: boolean | null;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  updatedAt: string;
  createdAt: string;
  enableAPIKey?: boolean | null;
  apiKey?: string | null;
  apiKeyIndex?: string | null;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "news-types".
 */
export interface NewsType {
  id: number;
  title: string;
  /**
   * Slug is automatically generated from the Title on initial save
   */
  slug: string;
  image: number | Media;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "news-sub-types".
 */
export interface NewsSubType {
  id: number;
  title: string;
  /**
   * Slug is automatically generated from the Title on initial save
   */
  slug: string;
  image: number | Media;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "IBrandLogoRoll".
 */
export interface IBrandLogoRoll {
  header?: string | null;
  logos?:
    | {
        image?: (number | null) | Media;
        link?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Align logos to the left
   */
  alignLeft?: boolean | null;
  createSideNavLink?: boolean | null;
  linkText?: string | null;
  blockMarginSettings?: boolean | null;
  /**
   * Set top margin to standard paragraph spacing
   */
  standardTopMargin?: boolean | null;
  /**
   * Set bottom margin to standard paragraph spacing
   */
  standardBottomMargin?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'brandLogoRoll';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "IMarqueeGallery".
 */
export interface IMarqueeGallery {
  title?: string | null;
  cards?:
    | {
        /**
         * Add social count and link instead of image. Use global Social Channels collection to modify count, icon, and links. Social links may only be added in certain slots in the gallery to maintain the pattern of the grid
         */
        isSocialLink?: boolean | null;
        imageCard?: {
          image: number | Media;
          titleOverlay?: string | null;
          textOverlay?: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          } | null;
        };
        socialChannel?: ('discord' | 'github' | 'linkedin' | 'medium' | 'telegram' | 'x' | 'youtube') | null;
        id?: string | null;
      }[]
    | null;
  createSideNavLink?: boolean | null;
  linkText?: string | null;
  blockMarginSettings?: boolean | null;
  /**
   * Set top margin to standard paragraph spacing
   */
  standardTopMargin?: boolean | null;
  /**
   * Set bottom margin to standard paragraph spacing
   */
  standardBottomMargin?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'marqueeGallery';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "IResponsiveImage".
 */
export interface IResponsiveImage {
  header?: string | null;
  imageDefault: number | Media;
  imageMedium?: (number | null) | Media;
  imageMobile?: (number | null) | Media;
  createSideNavLink?: boolean | null;
  linkText?: string | null;
  blockMarginSettings?: boolean | null;
  /**
   * Set top margin to standard paragraph spacing
   */
  standardTopMargin?: boolean | null;
  /**
   * Set bottom margin to standard paragraph spacing
   */
  standardBottomMargin?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'responsiveImage';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "IStepsBlock".
 */
export interface IStepsBlock {
  title?: string | null;
  steps: {
    title?: string | null;
    description?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    id?: string | null;
  }[];
  createSideNavLink?: boolean | null;
  linkText?: string | null;
  blockMarginSettings?: boolean | null;
  /**
   * Set top margin to standard paragraph spacing
   */
  standardTopMargin?: boolean | null;
  /**
   * Set bottom margin to standard paragraph spacing
   */
  standardBottomMargin?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'steps';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ILayerCake".
 */
export interface ILayerCake {
  bannerText?: string | null;
  primaryColumnLabel?: string | null;
  layers?:
    | {
        header?: string | null;
        text?: string | null;
        id?: string | null;
      }[]
    | null;
  secondaryColumnSections?:
    | {
        label?: string | null;
        products?: (number | Product)[] | null;
        id?: string | null;
      }[]
    | null;
  createSideNavLink?: boolean | null;
  linkText?: string | null;
  blockMarginSettings?: boolean | null;
  /**
   * Set top margin to standard paragraph spacing
   */
  standardTopMargin?: boolean | null;
  /**
   * Set bottom margin to standard paragraph spacing
   */
  standardBottomMargin?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'layerCake';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "IFastPanel".
 */
export interface IFastPanel {
  text?: string | null;
  createSideNavLink?: boolean | null;
  linkText?: string | null;
  blockMarginSettings?: boolean | null;
  /**
   * Set top margin to standard paragraph spacing
   */
  standardTopMargin?: boolean | null;
  /**
   * Set bottom margin to standard paragraph spacing
   */
  standardBottomMargin?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'fastPanel';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "IDecentralizedPanel".
 */
export interface IDecentralizedPanel {
  header?: string | null;
  subheader?: string | null;
  text?: string | null;
  createSideNavLink?: boolean | null;
  linkText?: string | null;
  blockMarginSettings?: boolean | null;
  /**
   * Set top margin to standard paragraph spacing
   */
  standardTopMargin?: boolean | null;
  /**
   * Set bottom margin to standard paragraph spacing
   */
  standardBottomMargin?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'decentralizedPanel';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ISecurePanel".
 */
export interface ISecurePanel {
  text?: string | null;
  createSideNavLink?: boolean | null;
  linkText?: string | null;
  blockMarginSettings?: boolean | null;
  /**
   * Set top margin to standard paragraph spacing
   */
  standardTopMargin?: boolean | null;
  /**
   * Set bottom margin to standard paragraph spacing
   */
  standardBottomMargin?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'securePanel';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "IEventsWidget".
 */
export interface IEventsWidget {
  /**
   * Override default title "Upcoming Events"
   */
  titleOverride?: string | null;
  createSideNavLink?: boolean | null;
  linkText?: string | null;
  blockMarginSettings?: boolean | null;
  /**
   * Set top margin to standard paragraph spacing
   */
  standardTopMargin?: boolean | null;
  /**
   * Set bottom margin to standard paragraph spacing
   */
  standardBottomMargin?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'eventsWidget';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "IContactFormBlock".
 */
export interface IContactFormBlock {
  title?: string | null;
  createSideNavLink?: boolean | null;
  linkText?: string | null;
  blockMarginSettings?: boolean | null;
  /**
   * Set top margin to standard paragraph spacing
   */
  standardTopMargin?: boolean | null;
  /**
   * Set bottom margin to standard paragraph spacing
   */
  standardBottomMargin?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'contactForm';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "INewsletterSignupFormBlock".
 */
export interface INewsletterSignupFormBlock {
  title?: string | null;
  createSideNavLink?: boolean | null;
  linkText?: string | null;
  blockMarginSettings?: boolean | null;
  /**
   * Set top margin to standard paragraph spacing
   */
  standardTopMargin?: boolean | null;
  /**
   * Set bottom margin to standard paragraph spacing
   */
  standardBottomMargin?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'newsletterSignupForm';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "IPageTeaserGrid".
 */
export interface IPageTeaserGrid {
  title?: string | null;
  teasers: (number | Page)[];
  createSideNavLink?: boolean | null;
  linkText?: string | null;
  blockMarginSettings?: boolean | null;
  /**
   * Set top margin to standard paragraph spacing
   */
  standardTopMargin?: boolean | null;
  /**
   * Set bottom margin to standard paragraph spacing
   */
  standardBottomMargin?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'pageTeaserGrid';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ITokenLinkBlock".
 */
export interface ITokenLinkBlock {
  richText?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  tokenLinks?:
    | {
        title?: string | null;
        link?: string | null;
        icon?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  createSideNavLink?: boolean | null;
  linkText?: string | null;
  blockMarginSettings?: boolean | null;
  /**
   * Set top margin to standard paragraph spacing
   */
  standardTopMargin?: boolean | null;
  /**
   * Set bottom margin to standard paragraph spacing
   */
  standardBottomMargin?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'tokenLink';
}
/**
 * Options for page's teaser, for example in the PageGrid block.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "IPageTeaser".
 */
export interface IPageTeaser {
  icon?: (number | null) | Media;
  shortDescription?: string | null;
  /**
   * Override the page title in teasers.
   */
  titleOverride?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "developerGuides".
 */
export interface DeveloperGuide {
  id: number;
  title: string;
  shortDescription?: string | null;
  guideLink: string;
  tags?: (number | DeveloperGuideTag)[] | null;
  product?: (number | null) | Product;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "developerGuideTags".
 */
export interface DeveloperGuideTag {
  id: number;
  title: string;
  /**
   * Slug is automatically generated from the Title on initial save
   */
  slug: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "product-teams".
 */
export interface ProductTeam {
  id: number;
  teamName: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'events';
        value: number | Event;
      } | null)
    | ({
        relationTo: 'grants';
        value: number | Grant;
      } | null)
    | ({
        relationTo: 'grant-types';
        value: number | GrantType;
      } | null)
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'news';
        value: number | News;
      } | null)
    | ({
        relationTo: 'news-types';
        value: number | NewsType;
      } | null)
    | ({
        relationTo: 'news-sub-types';
        value: number | NewsSubType;
      } | null)
    | ({
        relationTo: 'people';
        value: number | Person;
      } | null)
    | ({
        relationTo: 'developerGuides';
        value: number | DeveloperGuide;
      } | null)
    | ({
        relationTo: 'developerGuideTags';
        value: number | DeveloperGuideTag;
      } | null)
    | ({
        relationTo: 'products';
        value: number | Product;
      } | null)
    | ({
        relationTo: 'wallets';
        value: number | Wallet;
      } | null)
    | ({
        relationTo: 'careers';
        value: number | Careers;
      } | null)
    | ({
        relationTo: 'product-teams';
        value: number | ProductTeam;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "events_select".
 */
export interface EventsSelect<T extends boolean = true> {
  title?: T;
  startDate?: T;
  startTime?: T;
  endDate?: T;
  endTime?: T;
  country?: T;
  location?: T;
  flareInvolvement?: T;
  eventLink?: T;
  button?:
    | T
    | {
        buttonType?: T;
        link?: T;
      };
  featured?: T;
  featuredHeroEyebrow?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "grants_select".
 */
export interface GrantsSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  logo?: T;
  country?: T;
  announcementLink?: T;
  grantCategory?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "grant-types_select".
 */
export interface GrantTypesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  hero?: T | PageHeroSelect<T>;
  hideHero?: T;
  previousPage?: T;
  nextPage?: T;
  linkType?: T;
  pageBanner?:
    | T
    | {
        togglePageBanner?: T;
        bannerText?: T;
      };
  devHub?: T | DevHubSelect<T>;
  teamGrid?: T | TeamGridSelect<T>;
  walletsGrid?: T | WalletsGridSelect<T>;
  careers?: T | CareersSelect<T>;
  components?:
    | T
    | {
        columns?: T | ColumnsSelect<T>;
        imageTextGrid?: T | ImageTextGridBlockSelect<T>;
        richTextBlock?: T | RichTextBlockSelect<T>;
        pastFeaturedGrantsGrid?: T | PastFeaturedGrantsGridBlockSelect<T>;
        stats?: T | StatsSelect<T>;
        tableDrawers?: T | TableWithDrawersSelect<T>;
        talkingPoints?: T | ITalkingPointsSelect<T>;
        twoColumn?: T | TwoColumnsSelect<T>;
        applicationProcess?: T | ApplicationProcessSelect<T>;
        officialChannels?: T | OfficialChannelsBlockSelect<T>;
        regionalLinkGrid?: T | IRegionalLinkGridSelect<T>;
        flareDropDates?: T | FlareDropDatesSelect<T>;
        twoColumnCta?: T | ITwoColumnCtaSelect<T>;
        videoEmbedBlock?: T | VideoEmbedBlockSelect<T>;
        codeCta?: T | ICodeCtaSelect<T>;
        featuredNewsCarousel?: T | IFeaturedNewsCarouselBlockSelect<T>;
        brandLogoRoll?: T | IBrandLogoRollSelect<T>;
        marqueeGallery?: T | IMarqueeGallerySelect<T>;
        responsiveImage?: T | IResponsiveImageSelect<T>;
        steps?: T | IStepsBlockSelect<T>;
        layerCake?: T | ILayerCakeSelect<T>;
        fastPanel?: T | IFastPanelSelect<T>;
        decentralizedPanel?: T | IDecentralizedPanelSelect<T>;
        securePanel?: T | ISecurePanelSelect<T>;
        eventsWidget?: T | IEventsWidgetSelect<T>;
        contactForm?: T | IContactFormBlockSelect<T>;
        newsletterSignupForm?: T | INewsletterSignupFormBlockSelect<T>;
        pageTeaserGrid?: T | IPageTeaserGridSelect<T>;
        tokenLink?: T | ITokenLinkBlockSelect<T>;
      };
  relatedNewsType?: T;
  pageFooterCTA?: T;
  pageFooterCTAButton?:
    | T
    | {
        buttonText?: T;
        buttonLink?: T;
        buttonSecondaryText?: T;
        buttonSecondaryLink?: T;
        backgroundImage?: T;
        backgroundImageStyle?: T;
        useSocialMediaButtons?: T;
      };
  pageTeaser?: T | IPageTeaserSelect<T>;
  pageTemplate?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PageHero_select".
 */
export interface PageHeroSelect<T extends boolean = true> {
  style?: T;
  headline?: T;
  eyebrow?: T;
  hideEyebrow?: T;
  buttonText?: T;
  buttonLink?: T;
  buttonSecondaryText?: T;
  buttonSecondaryLink?: T;
  textLinkText?: T;
  textLinkButton?: T;
  backgroundImage?: T;
  showBackgroundVideo?: T;
  logo?: T;
  text?: T;
  grantsInfo?: T | PageHeroGrantsInfoSelect<T>;
  protocolInfo?: T | PageHeroProtocolInfoSelect<T>;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PageHeroGrantsInfo_select".
 */
export interface PageHeroGrantsInfoSelect<T extends boolean = true> {
  grantsAwarded?: T;
  countries?: T | FeaturedGrantsCountriesSelect<T>;
  topCategories?: T | FeaturedGrantsTopCategoriesSelect<T>;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FeaturedGrantsCountries_select".
 */
export interface FeaturedGrantsCountriesSelect<T extends boolean = true> {
  country?: T;
  id?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FeaturedGrantsTopCategories_select".
 */
export interface FeaturedGrantsTopCategoriesSelect<T extends boolean = true> {
  type?: T;
  number?: T;
  id?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PageHeroProtocolInfo_select".
 */
export interface PageHeroProtocolInfoSelect<T extends boolean = true> {
  providersLabelIcon?: T;
  providersLabelOverride?: T;
  providers?: T;
  providersUnit?: T;
  feedsLabelIcon?: T;
  feedsLabelOverride?: T;
  feeds?: T;
  tokensLabelIcon?: T;
  tokensLabelOverride?: T;
  stakeTokens?: T;
  stakeValue?: T;
  averageBlockTimeLabelIcon?: T;
  averageBlockTimeLabelOverride?: T;
  averageBlockTime?: T;
  averageBlockTimeUnit?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "DevHub_select".
 */
export interface DevHubSelect<T extends boolean = true> {
  productsGrid?: T;
  linkBand?:
    | T
    | {
        linkBandTitle?: T;
        links?: T | LinkBandLinksSelect<T>;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LinkBandLinks_select".
 */
export interface LinkBandLinksSelect<T extends boolean = true> {
  linkText?: T;
  linkUrl?: T;
  id?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TeamGrid_select".
 */
export interface TeamGridSelect<T extends boolean = true> {
  gridTitle?: T;
  team?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "WalletsGrid_select".
 */
export interface WalletsGridSelect<T extends boolean = true> {
  walletsGridIntro?: T;
  wallets?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "careers_select".
 */
export interface CareersSelect<T extends boolean = true> {
  pageTitle?: T;
  content?: T;
  emptyListingsText?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Columns_select".
 */
export interface ColumnsSelect<T extends boolean = true> {
  layout?: T;
  alignColumns?: T;
  leftColumnBlock?:
    | T
    | {
        colImage?:
          | T
          | {
              image?: T;
              id?: T;
              blockName?: T;
            };
        richText?: T | RichTextSelect<T>;
      };
  rightColumnBlock?:
    | T
    | {
        colImage?:
          | T
          | {
              image?: T;
              id?: T;
              blockName?: T;
            };
        richText?: T | RichTextSelect<T>;
      };
  createSideNavLink?: T;
  linkText?: T;
  blockMarginSettings?: T;
  standardTopMargin?: T;
  standardBottomMargin?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "RichText_select".
 */
export interface RichTextSelect<T extends boolean = true> {
  richText?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ImageTextGridBlock_select".
 */
export interface ImageTextGridBlockSelect<T extends boolean = true> {
  imageTextGridTitle?: T;
  imageTextCardGrid?: T | ImageTextCardsSelect<T>;
  createSideNavLink?: T;
  linkText?: T;
  blockMarginSettings?: T;
  standardTopMargin?: T;
  standardBottomMargin?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ImageTextCards_select".
 */
export interface ImageTextCardsSelect<T extends boolean = true> {
  cardImage?: T;
  cardHeader?: T;
  cardText?: T;
  id?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "RichTextBlock_select".
 */
export interface RichTextBlockSelect<T extends boolean = true> {
  richText?: T;
  createSideNavLink?: T;
  linkText?: T;
  blockMarginSettings?: T;
  standardTopMargin?: T;
  standardBottomMargin?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PastFeaturedGrantsGridBlock_select".
 */
export interface PastFeaturedGrantsGridBlockSelect<T extends boolean = true> {
  gridTitle?: T;
  grantsGrid?: T;
  createSideNavLink?: T;
  linkText?: T;
  blockMarginSettings?: T;
  standardTopMargin?: T;
  standardBottomMargin?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Stats_select".
 */
export interface StatsSelect<T extends boolean = true> {
  pullFromApi?: T;
  stats?: T | StatsListSelect<T>;
  caption?: T;
  createSideNavLink?: T;
  linkText?: T;
  blockMarginSettings?: T;
  standardTopMargin?: T;
  standardBottomMargin?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "StatsList_select".
 */
export interface StatsListSelect<T extends boolean = true> {
  label?: T;
  stat?: T;
  id?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Table with Drawers_select".
 */
export interface TableWithDrawersSelect {
  column1Header?: boolean;
  column2Header?: boolean;
  sections?: boolean | SectionsSelect;
  createSideNavLink?: boolean;
  linkText?: boolean;
  blockMarginSettings?: boolean;
  standardTopMargin?: boolean;
  standardBottomMargin?: boolean;
  id?: boolean;
  blockName?: boolean;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Sections_select".
 */
export interface SectionsSelect<T extends boolean = true> {
  name?: T;
  rows?: T | RowsSelect<T>;
  id?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Rows_select".
 */
export interface RowsSelect<T extends boolean = true> {
  rowLabel?: T;
  column1Data?: T;
  column2Data?: T;
  id?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ITalkingPoints_select".
 */
export interface ITalkingPointsSelect<T extends boolean = true> {
  variation?: T;
  points?: T | PointsListSelect<T>;
  createSideNavLink?: T;
  linkText?: T;
  blockMarginSettings?: T;
  standardTopMargin?: T;
  standardBottomMargin?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PointsList_select".
 */
export interface PointsListSelect<T extends boolean = true> {
  icon?: T;
  header?: T;
  text?: T;
  addLogos?: T;
  logos?:
    | T
    | {
        logo?: T;
        link?: T;
        id?: T;
      };
  id?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "twoColumns_select".
 */
export interface TwoColumnsSelect<T extends boolean = true> {
  layout?: T;
  ColumnOne?:
    | T
    | {
        contentType?: T;
        image?: T;
        text?: T;
        imageAlignment?: T;
        imageFill?: T;
      };
  ColumnTwo?:
    | T
    | {
        contentType?: T;
        image?: T;
        text?: T;
        imageAlignment?: T;
        imageFill?: T;
      };
  createSideNavLink?: T;
  linkText?: T;
  blockMarginSettings?: T;
  standardTopMargin?: T;
  standardBottomMargin?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ApplicationProcess_select".
 */
export interface ApplicationProcessSelect<T extends boolean = true> {
  title?: T;
  steps?: T | ApplicationProcessStepsSelect<T>;
  createSideNavLink?: T;
  linkText?: T;
  blockMarginSettings?: T;
  standardTopMargin?: T;
  standardBottomMargin?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ApplicationProcessSteps_select".
 */
export interface ApplicationProcessStepsSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  graphicTitle?: T;
  graphicText?: T;
  id?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "OfficialChannelsBlock_select".
 */
export interface OfficialChannelsBlockSelect<T extends boolean = true> {
  title?: T;
  text?: T;
  selectSocialChannels?: T;
  createSideNavLink?: T;
  linkText?: T;
  blockMarginSettings?: T;
  standardTopMargin?: T;
  standardBottomMargin?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "IRegionalLinkGrid_select".
 */
export interface IRegionalLinkGridSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  links?:
    | T
    | {
        link?: T;
        name?: T;
        translatedName?: T;
        country?: T;
        id?: T;
      };
  createSideNavLink?: T;
  linkText?: T;
  blockMarginSettings?: T;
  standardTopMargin?: T;
  standardBottomMargin?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FlareDropDates_select".
 */
export interface FlareDropDatesSelect<T extends boolean = true> {
  createSideNavLink?: T;
  linkText?: T;
  blockMarginSettings?: T;
  standardTopMargin?: T;
  standardBottomMargin?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ITwoColumnCta_select".
 */
export interface ITwoColumnCtaSelect<T extends boolean = true> {
  variation?: T;
  image?: T;
  eyebrow?: T;
  header?: T;
  text?: T;
  primaryButtonText?: T;
  primaryButtonLink?: T;
  secondaryButtonText?: T;
  secondaryButtonLink?: T;
  createSideNavLink?: T;
  linkText?: T;
  blockMarginSettings?: T;
  standardTopMargin?: T;
  standardBottomMargin?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "VideoEmbedBlock_select".
 */
export interface VideoEmbedBlockSelect<T extends boolean = true> {
  title?: T;
  url?: T;
  createSideNavLink?: T;
  linkText?: T;
  blockMarginSettings?: T;
  standardTopMargin?: T;
  standardBottomMargin?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ICodeCta_select".
 */
export interface ICodeCtaSelect<T extends boolean = true> {
  header?: T;
  text?: T;
  buttonText?: T;
  buttonLink?: T;
  buttonSecondaryText?: T;
  buttonSecondaryLink?: T;
  hideCode?: T;
  solidityLabelOverride?: T;
  codeSolidity?: T;
  javaScriptLabelOverride?: T;
  codeJs?: T;
  pythonLabelOverride?: T;
  codePython?: T;
  rustLabelOverride?: T;
  codeRust?: T;
  goLabelOverride?: T;
  codeGo?: T;
  image?: T;
  createSideNavLink?: T;
  linkText?: T;
  blockMarginSettings?: T;
  standardTopMargin?: T;
  standardBottomMargin?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "IFeaturedNewsCarouselBlock_select".
 */
export interface IFeaturedNewsCarouselBlockSelect<T extends boolean = true> {
  newsPosts?: T;
  createSideNavLink?: T;
  linkText?: T;
  blockMarginSettings?: T;
  standardTopMargin?: T;
  standardBottomMargin?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "IBrandLogoRoll_select".
 */
export interface IBrandLogoRollSelect<T extends boolean = true> {
  header?: T;
  logos?:
    | T
    | {
        image?: T;
        link?: T;
        id?: T;
      };
  alignLeft?: T;
  createSideNavLink?: T;
  linkText?: T;
  blockMarginSettings?: T;
  standardTopMargin?: T;
  standardBottomMargin?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "IMarqueeGallery_select".
 */
export interface IMarqueeGallerySelect<T extends boolean = true> {
  title?: T;
  cards?:
    | T
    | {
        isSocialLink?: T;
        imageCard?:
          | T
          | {
              image?: T;
              titleOverlay?: T;
              textOverlay?: T;
            };
        socialChannel?: T;
        id?: T;
      };
  createSideNavLink?: T;
  linkText?: T;
  blockMarginSettings?: T;
  standardTopMargin?: T;
  standardBottomMargin?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "IResponsiveImage_select".
 */
export interface IResponsiveImageSelect<T extends boolean = true> {
  header?: T;
  imageDefault?: T;
  imageMedium?: T;
  imageMobile?: T;
  createSideNavLink?: T;
  linkText?: T;
  blockMarginSettings?: T;
  standardTopMargin?: T;
  standardBottomMargin?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "IStepsBlock_select".
 */
export interface IStepsBlockSelect<T extends boolean = true> {
  title?: T;
  steps?:
    | T
    | {
        title?: T;
        description?: T;
        id?: T;
      };
  createSideNavLink?: T;
  linkText?: T;
  blockMarginSettings?: T;
  standardTopMargin?: T;
  standardBottomMargin?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ILayerCake_select".
 */
export interface ILayerCakeSelect<T extends boolean = true> {
  bannerText?: T;
  primaryColumnLabel?: T;
  layers?:
    | T
    | {
        header?: T;
        text?: T;
        id?: T;
      };
  secondaryColumnSections?:
    | T
    | {
        label?: T;
        products?: T;
        id?: T;
      };
  createSideNavLink?: T;
  linkText?: T;
  blockMarginSettings?: T;
  standardTopMargin?: T;
  standardBottomMargin?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "IFastPanel_select".
 */
export interface IFastPanelSelect<T extends boolean = true> {
  text?: T;
  createSideNavLink?: T;
  linkText?: T;
  blockMarginSettings?: T;
  standardTopMargin?: T;
  standardBottomMargin?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "IDecentralizedPanel_select".
 */
export interface IDecentralizedPanelSelect<T extends boolean = true> {
  header?: T;
  subheader?: T;
  text?: T;
  createSideNavLink?: T;
  linkText?: T;
  blockMarginSettings?: T;
  standardTopMargin?: T;
  standardBottomMargin?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ISecurePanel_select".
 */
export interface ISecurePanelSelect<T extends boolean = true> {
  text?: T;
  createSideNavLink?: T;
  linkText?: T;
  blockMarginSettings?: T;
  standardTopMargin?: T;
  standardBottomMargin?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "IEventsWidget_select".
 */
export interface IEventsWidgetSelect<T extends boolean = true> {
  titleOverride?: T;
  createSideNavLink?: T;
  linkText?: T;
  blockMarginSettings?: T;
  standardTopMargin?: T;
  standardBottomMargin?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "IContactFormBlock_select".
 */
export interface IContactFormBlockSelect<T extends boolean = true> {
  title?: T;
  createSideNavLink?: T;
  linkText?: T;
  blockMarginSettings?: T;
  standardTopMargin?: T;
  standardBottomMargin?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "INewsletterSignupFormBlock_select".
 */
export interface INewsletterSignupFormBlockSelect<T extends boolean = true> {
  title?: T;
  createSideNavLink?: T;
  linkText?: T;
  blockMarginSettings?: T;
  standardTopMargin?: T;
  standardBottomMargin?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "IPageTeaserGrid_select".
 */
export interface IPageTeaserGridSelect<T extends boolean = true> {
  title?: T;
  teasers?: T;
  createSideNavLink?: T;
  linkText?: T;
  blockMarginSettings?: T;
  standardTopMargin?: T;
  standardBottomMargin?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ITokenLinkBlock_select".
 */
export interface ITokenLinkBlockSelect<T extends boolean = true> {
  richText?: T;
  tokenLinks?:
    | T
    | {
        title?: T;
        link?: T;
        icon?: T;
        id?: T;
      };
  createSideNavLink?: T;
  linkText?: T;
  blockMarginSettings?: T;
  standardTopMargin?: T;
  standardBottomMargin?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "IPageTeaser_select".
 */
export interface IPageTeaserSelect<T extends boolean = true> {
  icon?: T;
  shortDescription?: T;
  titleOverride?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  enableAPIKey?: T;
  apiKey?: T;
  apiKeyIndex?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "news_select".
 */
export interface NewsSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  excerpt?: T;
  publishDate?: T;
  author?: T;
  type?: T;
  subtype?: T;
  contentType?: T;
  relatedPosts?: T;
  teaserThumbnail?: T;
  logos?:
    | T
    | {
        image?: T;
        id?: T;
      };
  featured?: T;
  content?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "news-types_select".
 */
export interface NewsTypesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  image?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "news-sub-types_select".
 */
export interface NewsSubTypesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  image?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "people_select".
 */
export interface PeopleSelect<T extends boolean = true> {
  fullName?: T;
  jobTitle?: T;
  headshot?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "developerGuides_select".
 */
export interface DeveloperGuidesSelect<T extends boolean = true> {
  title?: T;
  shortDescription?: T;
  guideLink?: T;
  tags?: T;
  product?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "developerGuideTags_select".
 */
export interface DeveloperGuideTagsSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products_select".
 */
export interface ProductsSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  link?: T;
  icon?: T;
  shortDescription?: T;
  titleOverride?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "wallets_select".
 */
export interface WalletsSelect<T extends boolean = true> {
  name?: T;
  logo?: T;
  walletLink?: T;
  flrFunctionality?: T;
  walletConnect?: T;
  tags?: T;
  platforms?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "product-teams_select".
 */
export interface ProductTeamsSelect<T extends boolean = true> {
  teamName?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "eventSettings".
 */
export interface EventSetting {
  id: number;
  /**
   * This will display on the event card in a marquee gallery when there's no featured event.
   */
  eventCardEyebrow: string;
  /**
   * This will display on the event card in a marquee gallery when there's no featured event.
   */
  eventCardTitle: string;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "selectPageFooterCtaSocialChannels".
 */
export interface SelectPageFooterCtaSocialChannel {
  id: number;
  /**
   * Select Social Channels to display as Social Media buttons in Page Footer CTAs.
   */
  selectSocialChannels?: ('discord' | 'github' | 'linkedin' | 'medium' | 'telegram' | 'x' | 'youtube')[] | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "social-channels".
 */
export interface SocialChannel {
  id: number;
  discord: {
    title: string;
    url: string;
    /**
     * Used in Marquee Gallery block, for example.
     */
    followerCount?: string | null;
  };
  github: {
    title: string;
    url: string;
    /**
     * Used in Marquee Gallery block, for example.
     */
    followerCount?: string | null;
  };
  linkedin: {
    title: string;
    url: string;
    /**
     * Used in Marquee Gallery block, for example.
     */
    followerCount?: string | null;
  };
  medium: {
    title: string;
    url: string;
    /**
     * Used in Marquee Gallery block, for example.
     */
    followerCount?: string | null;
  };
  telegram: {
    title: string;
    url: string;
    /**
     * Used in Marquee Gallery block, for example.
     */
    followerCount?: string | null;
  };
  x: {
    title: string;
    url: string;
    /**
     * Used in Marquee Gallery block, for example.
     */
    followerCount?: string | null;
  };
  youtube: {
    title: string;
    url: string;
    /**
     * Used in Marquee Gallery block, for example.
     */
    followerCount?: string | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "eventSettings_select".
 */
export interface EventSettingsSelect<T extends boolean = true> {
  eventCardEyebrow?: T;
  eventCardTitle?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "selectPageFooterCtaSocialChannels_select".
 */
export interface SelectPageFooterCtaSocialChannelsSelect<T extends boolean = true> {
  selectSocialChannels?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "social-channels_select".
 */
export interface SocialChannelsSelect<T extends boolean = true> {
  discord?:
    | T
    | {
        title?: T;
        url?: T;
        followerCount?: T;
      };
  github?:
    | T
    | {
        title?: T;
        url?: T;
        followerCount?: T;
      };
  linkedin?:
    | T
    | {
        title?: T;
        url?: T;
        followerCount?: T;
      };
  medium?:
    | T
    | {
        title?: T;
        url?: T;
        followerCount?: T;
      };
  telegram?:
    | T
    | {
        title?: T;
        url?: T;
        followerCount?: T;
      };
  x?:
    | T
    | {
        title?: T;
        url?: T;
        followerCount?: T;
      };
  youtube?:
    | T
    | {
        title?: T;
        url?: T;
        followerCount?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Subheader".
 */
export interface Subheader {
  subheader?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'subheader';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "IHeadingWithButton".
 */
export interface IHeadingWithButton {
  heading?: string | null;
  buttonText?: string | null;
  buttonLink?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'headingWithButton';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}